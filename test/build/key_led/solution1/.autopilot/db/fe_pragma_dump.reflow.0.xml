<pragmas>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_concat_ref<1, ap_int_base<1, false>, 1, ap_int_base<1, false> >::ap_concat_ref(ap_int_base<1, false>&, ap_int_base<1, false>&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<2, false>::ap_bit_ref(ap_int_base<2, false>*, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<2, false>::ap_int_base<1, ap_int_base<1, false>, 1, ap_int_base<1, false> >(ap_concat_ref<1, ap_int_base<1, false>, 1, ap_int_base<1, false> > const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<1>::ap_uint<2, false>(ap_bit_ref<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<1, false>::ap_int_base<2, false>(ap_bit_ref<2, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_bit_ref<2, false>::operator bool() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<2, false>::operator[](int)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="_ZN8ssdm_intILi2ELb0EEC2EDq2_j" off="0" region="0" recursive="0"/>
<pragma file="../src/key_led.cpp" line="24" pragmaType="interface" parentfunction="key_led_top" mode="ap_ctrl_none" port="return" name=""/>
<pragma file="../src/key_led.cpp" line="25" pragmaType="interface" parentfunction="key_led_top" mode="ap_none" port="key0" name="" register="0"/>
<pragma file="../src/key_led.cpp" line="26" pragmaType="interface" parentfunction="key_led_top" mode="ap_none" port="key1" name="" register="0"/>
<pragma file="../src/key_led.cpp" line="27" pragmaType="interface" parentfunction="key_led_top" mode="ap_none" port="led0" name="" register="0"/>
<pragma file="../src/key_led.cpp" line="28" pragmaType="interface" parentfunction="key_led_top" mode="ap_none" port="led1" name="" register="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_concat_ref<1, ap_int_base<1, false>, 1, ap_int_base<1, false> > ap_int_base<1, false>::operator,<1, false>(ap_int_base<1, false>&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<2, false>::operator unsigned long long() const" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<2>::ap_uint<1, ap_int_base<1, false>, 1, ap_int_base<1, false> >(ap_concat_ref<1, ap_int_base<1, false>, 1, ap_int_base<1, false> > const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<2, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<2>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="length" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
</pragmas>
