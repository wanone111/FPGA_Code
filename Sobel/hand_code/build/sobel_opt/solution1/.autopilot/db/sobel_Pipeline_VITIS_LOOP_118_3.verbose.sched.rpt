

================================================================
== Vitis HLS Report for 'sobel_Pipeline_VITIS_LOOP_118_3'
================================================================
* Date:           Sat Oct 11 17:25:54 2025

* Version:        2024.2 (Build 5238294 on Nov  8 2024)
* Project:        sobel_opt
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  6.665 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval  | Pipeline|
    |   min   |   max   |    min    |    max    | min |  max |   Type  |
    +---------+---------+-----------+-----------+-----+------+---------+
    |        9|     1288|  90.000 ns|  12.880 us|    9|  1288|       no|
    +---------+---------+-----------+-----------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +--------------------+---------+---------+----------+-----------+-----------+----------+----------+
        |                    |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip   |          |
        |      Loop Name     |   min   |   max   |  Latency |  achieved |   target  |   Count  | Pipelined|
        +--------------------+---------+---------+----------+-----------+-----------+----------+----------+
        |- VITIS_LOOP_118_3  |        5|     1284|         6|          1|          1|  1 ~ 1280|       yes|
        +--------------------+---------+---------+----------+-----------+-----------+----------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 2
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 10
* Pipeline : 1
  Pipeline-0 : II = 1, D = 6, States = { 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 8 6 
6 --> 7 
7 --> 2 
8 --> 9 
9 --> 10 
10 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 2.52>
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%col_2 = alloca i32 1" [../src/sobel_opt.cpp:84]   --->   Operation 11 'alloca' 'col_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%data_p_strb = alloca i32 1" [../src/sobel_opt.cpp:74]   --->   Operation 12 'alloca' 'data_p_strb' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%WindowBuffer_19 = alloca i32 1"   --->   Operation 13 'alloca' 'WindowBuffer_19' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%WindowBuffer_23 = alloca i32 1"   --->   Operation 14 'alloca' 'WindowBuffer_23' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%WindowBuffer_21 = alloca i32 1"   --->   Operation 15 'alloca' 'WindowBuffer_21' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%rows_read = read i31 @_ssdm_op_Read.ap_auto.i31, i31 %rows"   --->   Operation 16 'read' 'rows_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%zext_ln98_read = read i13 @_ssdm_op_Read.ap_auto.i13, i13 %zext_ln98"   --->   Operation 17 'read' 'zext_ln98_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%cmp_i_i80_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %cmp_i_i80"   --->   Operation 18 'read' 'cmp_i_i80_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.00ns)   --->   "%sub_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %sub"   --->   Operation 19 'read' 'sub_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 20 [1/1] (0.00ns)   --->   "%btm_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %btm"   --->   Operation 20 'read' 'btm_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 21 [1/1] (0.00ns)   --->   "%mid_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %mid"   --->   Operation 21 'read' 'mid_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%top_read = read i2 @_ssdm_op_Read.ap_auto.i2, i2 %top"   --->   Operation 22 'read' 'top_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 23 [1/1] (0.00ns)   --->   "%cols_read = read i32 @_ssdm_op_Read.ap_auto.i32, i32 %cols"   --->   Operation 23 'read' 'cols_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%data_p_strb_2_read = read i1 @_ssdm_op_Read.ap_auto.i1, i1 %data_p_strb_2"   --->   Operation 24 'read' 'data_p_strb_2_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%WindowBuffer_16_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %WindowBuffer_16"   --->   Operation 25 'read' 'WindowBuffer_16_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%WindowBuffer_15_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %WindowBuffer_15"   --->   Operation 26 'read' 'WindowBuffer_15_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%WindowBuffer_17_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %WindowBuffer_17"   --->   Operation 27 'read' 'WindowBuffer_17_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%WindowBuffer_12_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %WindowBuffer_12"   --->   Operation 28 'read' 'WindowBuffer_12_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%WindowBuffer_14_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %WindowBuffer_14"   --->   Operation 29 'read' 'WindowBuffer_14_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%WindowBuffer_13_read = read i8 @_ssdm_op_Read.ap_auto.i8, i8 %WindowBuffer_13"   --->   Operation 30 'read' 'WindowBuffer_13_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%rows_cast = zext i31 %rows_read"   --->   Operation 31 'zext' 'rows_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 32 [1/1] (0.00ns)   --->   "%zext_ln98_cast = zext i13 %zext_ln98_read"   --->   Operation 32 'zext' 'zext_ln98_cast' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 33 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i8 %dst_V_data_V, i1 %dst_V_keep_V, i1 %dst_V_strb_V, i1 0, i1 %dst_V_last_V, i1 0, i1 0, void @empty_7"   --->   Operation 33 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 34 [1/1] (0.00ns)   --->   "%specaxissidechannel_ln0 = specaxissidechannel void @_ssdm_op_SpecAXISSideChannel, i8 %src_V_data_V, i1 %src_V_keep_V, i1 %src_V_strb_V, i1 0, i1 %src_V_last_V, i1 0, i1 0, void @empty_8"   --->   Operation 34 'specaxissidechannel' 'specaxissidechannel_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 35 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %dst_V_last_V, i1 %dst_V_strb_V, i1 %dst_V_keep_V, i8 %dst_V_data_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 35 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 36 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %src_V_last_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 36 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 37 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %src_V_strb_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 37 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 38 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i1 %src_V_keep_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 38 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 39 [1/1] (0.00ns)   --->   "%specinterface_ln0 = specinterface void @_ssdm_op_SpecInterface, i8 %src_V_data_V, void @empty, i32 0, i32 0, void @empty_0, i32 0, i32 0, void @empty_1, void @empty_1, void @empty_1, i32 0, i32 0, i32 0, i32 0, void @empty_1, void @empty_1, i32 4294967295, i32 0, i32 0"   --->   Operation 39 'specinterface' 'specinterface_ln0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 40 [1/1] (2.52ns)   --->   "%cmp_i_i126 = icmp_ult  i32 %zext_ln98_cast, i32 %rows_cast"   --->   Operation 40 'icmp' 'cmp_i_i126' <Predicate = true> <Delay = 2.52> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.52> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 41 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_13_read, i8 %WindowBuffer_21"   --->   Operation 41 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 42 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_14_read, i8 %WindowBuffer_23"   --->   Operation 42 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 43 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_12_read, i8 %WindowBuffer_19"   --->   Operation 43 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 44 [1/1] (1.58ns)   --->   "%store_ln74 = store i1 %data_p_strb_2_read, i1 %data_p_strb" [../src/sobel_opt.cpp:74]   --->   Operation 44 'store' 'store_ln74' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 45 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_17_read, i8 %WindowBuffer_22_out"   --->   Operation 45 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 46 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_15_read, i8 %WindowBuffer_18_out"   --->   Operation 46 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 47 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_16_read, i8 %WindowBuffer_20_out"   --->   Operation 47 'store' 'store_ln0' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 48 [1/1] (1.58ns)   --->   "%store_ln84 = store i13 0, i13 %col_2" [../src/sobel_opt.cpp:84]   --->   Operation 48 'store' 'store_ln84' <Predicate = true> <Delay = 1.58>
ST_1 : Operation 49 [1/1] (0.00ns)   --->   "%br_ln118 = br void %for.body51" [../src/sobel_opt.cpp:118]   --->   Operation 49 'br' 'br_ln118' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.14>
ST_2 : Operation 50 [1/1] (0.00ns)   --->   "%col = load i13 %col_2" [../src/sobel_opt.cpp:118]   --->   Operation 50 'load' 'col' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 51 [1/1] (0.00ns)   --->   "%zext_ln118 = zext i13 %col" [../src/sobel_opt.cpp:118]   --->   Operation 51 'zext' 'zext_ln118' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 52 [1/1] (2.55ns)   --->   "%icmp_ln118 = icmp_slt  i32 %zext_ln118, i32 %cols_read" [../src/sobel_opt.cpp:118]   --->   Operation 52 'icmp' 'icmp_ln118' <Predicate = true> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (1.67ns)   --->   "%col_3 = add i13 %col, i13 1" [../src/sobel_opt.cpp:118]   --->   Operation 53 'add' 'col_3' <Predicate = true> <Delay = 1.67> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.67> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 54 [1/1] (0.00ns)   --->   "%br_ln118 = br i1 %icmp_ln118, void %for.end124.loopexit.exitStub, void %for.body51.split" [../src/sobel_opt.cpp:118]   --->   Operation 54 'br' 'br_ln118' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 55 [1/1] (0.00ns)   --->   "%specpipeline_ln121 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 0, i32 0, void @empty_1" [../src/sobel_opt.cpp:121]   --->   Operation 55 'specpipeline' 'specpipeline_ln121' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 56 [1/1] (0.00ns)   --->   "%speclooptripcount_ln120 = speclooptripcount void @_ssdm_op_SpecLoopTripCount, i64 1, i64 1280, i64 640" [../src/sobel_opt.cpp:120]   --->   Operation 56 'speclooptripcount' 'speclooptripcount_ln120' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 57 [1/1] (0.00ns)   --->   "%specloopname_ln118 = specloopname void @_ssdm_op_SpecLoopName, void @empty_10" [../src/sobel_opt.cpp:118]   --->   Operation 57 'specloopname' 'specloopname_ln118' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 58 [1/1] (0.00ns)   --->   "%br_ln122 = br i1 %cmp_i_i126, void %if.else62, void %if.then53" [../src/sobel_opt.cpp:122]   --->   Operation 58 'br' 'br_ln122' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_2 : Operation 59 [1/1] (0.00ns)   --->   "%br_ln0 = br void %if.end67"   --->   Operation 59 'br' 'br_ln0' <Predicate = (icmp_ln118 & !cmp_i_i126)> <Delay = 0.00>
ST_2 : Operation 60 [1/1] (2.55ns)   --->   "%icmp_ln141 = icmp_eq  i32 %sub_read, i32 %zext_ln118" [../src/sobel_opt.cpp:141]   --->   Operation 60 'icmp' 'icmp_ln141' <Predicate = (icmp_ln118)> <Delay = 2.55> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 61 [1/1] (0.97ns)   --->   "%data_p_last = and i1 %cmp_i_i80_read, i1 %icmp_ln141" [../src/sobel_opt.cpp:141]   --->   Operation 61 'and' 'data_p_last' <Predicate = (icmp_ln118)> <Delay = 0.97> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (1.58ns)   --->   "%store_ln84 = store i13 %col_3, i13 %col_2" [../src/sobel_opt.cpp:84]   --->   Operation 62 'store' 'store_ln84' <Predicate = (icmp_ln118)> <Delay = 1.58>

State 3 <SV = 2> <Delay = 4.81>
ST_3 : Operation 63 [1/1] (0.00ns)   --->   "%zext_ln128 = zext i13 %col" [../src/sobel_opt.cpp:128]   --->   Operation 63 'zext' 'zext_ln128' <Predicate = (icmp_ln118 & !cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 64 [1/1] (0.00ns)   --->   "%LineBuffer_addr_1 = getelementptr i8 %LineBuffer, i64 0, i64 %zext_ln128" [../src/sobel_opt.cpp:128]   --->   Operation 64 'getelementptr' 'LineBuffer_addr_1' <Predicate = (icmp_ln118 & !cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns)   --->   "%LineBuffer_1_addr_1 = getelementptr i8 %LineBuffer_1, i64 0, i64 %zext_ln128" [../src/sobel_opt.cpp:128]   --->   Operation 65 'getelementptr' 'LineBuffer_1_addr_1' <Predicate = (icmp_ln118 & !cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 66 [1/1] (0.00ns)   --->   "%LineBuffer_2_addr_1 = getelementptr i8 %LineBuffer_2, i64 0, i64 %zext_ln128" [../src/sobel_opt.cpp:128]   --->   Operation 66 'getelementptr' 'LineBuffer_2_addr_1' <Predicate = (icmp_ln118 & !cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 67 [1/1] (1.56ns)   --->   "%switch_ln128 = switch i2 %btm_read, void %arrayidx667.case.2, i2 0, void %arrayidx667.case.0, i2 1, void %arrayidx667.case.1" [../src/sobel_opt.cpp:128]   --->   Operation 67 'switch' 'switch_ln128' <Predicate = (icmp_ln118 & !cmp_i_i126)> <Delay = 1.56>
ST_3 : Operation 68 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln128 = store i8 0, i11 %LineBuffer_1_addr_1" [../src/sobel_opt.cpp:128]   --->   Operation 68 'store' 'store_ln128' <Predicate = (icmp_ln118 & !cmp_i_i126 & btm_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_3 : Operation 69 [1/1] (0.00ns)   --->   "%br_ln128 = br void %arrayidx667.exit" [../src/sobel_opt.cpp:128]   --->   Operation 69 'br' 'br_ln128' <Predicate = (icmp_ln118 & !cmp_i_i126 & btm_read == 1)> <Delay = 0.00>
ST_3 : Operation 70 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln128 = store i8 0, i11 %LineBuffer_addr_1" [../src/sobel_opt.cpp:128]   --->   Operation 70 'store' 'store_ln128' <Predicate = (icmp_ln118 & !cmp_i_i126 & btm_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_3 : Operation 71 [1/1] (0.00ns)   --->   "%br_ln128 = br void %arrayidx667.exit" [../src/sobel_opt.cpp:128]   --->   Operation 71 'br' 'br_ln128' <Predicate = (icmp_ln118 & !cmp_i_i126 & btm_read == 0)> <Delay = 0.00>
ST_3 : Operation 72 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln128 = store i8 0, i11 %LineBuffer_2_addr_1" [../src/sobel_opt.cpp:128]   --->   Operation 72 'store' 'store_ln128' <Predicate = (icmp_ln118 & !cmp_i_i126 & btm_read != 0 & btm_read != 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_3 : Operation 73 [1/1] (0.00ns)   --->   "%br_ln128 = br void %arrayidx667.exit" [../src/sobel_opt.cpp:128]   --->   Operation 73 'br' 'br_ln128' <Predicate = (icmp_ln118 & !cmp_i_i126 & btm_read != 0 & btm_read != 1)> <Delay = 0.00>
ST_3 : Operation 74 [1/1] (0.51ns)   --->   "%empty = read i11 @_ssdm_op_Read.axis.volatile.i8P0A.i1P0A.i1P0A.i1P0A, i8 %src_V_data_V, i1 %src_V_keep_V, i1 %src_V_strb_V, i1 %src_V_last_V" [../src/sobel_opt.cpp:124]   --->   Operation 74 'read' 'empty' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 0.51> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.22> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 75 [1/1] (0.00ns)   --->   "%data_p_data = extractvalue i11 %empty" [../src/sobel_opt.cpp:124]   --->   Operation 75 'extractvalue' 'data_p_data' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 76 [1/1] (0.00ns)   --->   "%data_p_strb_3 = extractvalue i11 %empty" [../src/sobel_opt.cpp:124]   --->   Operation 76 'extractvalue' 'data_p_strb_3' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln125 = zext i13 %col" [../src/sobel_opt.cpp:125]   --->   Operation 77 'zext' 'zext_ln125' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "%LineBuffer_addr = getelementptr i8 %LineBuffer, i64 0, i64 %zext_ln125" [../src/sobel_opt.cpp:125]   --->   Operation 78 'getelementptr' 'LineBuffer_addr' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "%LineBuffer_1_addr = getelementptr i8 %LineBuffer_1, i64 0, i64 %zext_ln125" [../src/sobel_opt.cpp:125]   --->   Operation 79 'getelementptr' 'LineBuffer_1_addr' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "%LineBuffer_2_addr = getelementptr i8 %LineBuffer_2, i64 0, i64 %zext_ln125" [../src/sobel_opt.cpp:125]   --->   Operation 80 'getelementptr' 'LineBuffer_2_addr' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 0.00>
ST_3 : Operation 81 [1/1] (1.56ns)   --->   "%switch_ln125 = switch i2 %btm_read, void %arrayidx6126.case.2, i2 0, void %arrayidx6126.case.0, i2 1, void %arrayidx6126.case.1" [../src/sobel_opt.cpp:125]   --->   Operation 81 'switch' 'switch_ln125' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 1.56>
ST_3 : Operation 82 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln125 = store i8 %data_p_data, i11 %LineBuffer_1_addr" [../src/sobel_opt.cpp:125]   --->   Operation 82 'store' 'store_ln125' <Predicate = (icmp_ln118 & cmp_i_i126 & btm_read == 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_3 : Operation 83 [1/1] (0.00ns)   --->   "%br_ln125 = br void %arrayidx6126.exit" [../src/sobel_opt.cpp:125]   --->   Operation 83 'br' 'br_ln125' <Predicate = (icmp_ln118 & cmp_i_i126 & btm_read == 1)> <Delay = 0.00>
ST_3 : Operation 84 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln125 = store i8 %data_p_data, i11 %LineBuffer_addr" [../src/sobel_opt.cpp:125]   --->   Operation 84 'store' 'store_ln125' <Predicate = (icmp_ln118 & cmp_i_i126 & btm_read == 0)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_3 : Operation 85 [1/1] (0.00ns)   --->   "%br_ln125 = br void %arrayidx6126.exit" [../src/sobel_opt.cpp:125]   --->   Operation 85 'br' 'br_ln125' <Predicate = (icmp_ln118 & cmp_i_i126 & btm_read == 0)> <Delay = 0.00>
ST_3 : Operation 86 [1/1] ( I:3.25ns O:3.25ns )   --->   "%store_ln125 = store i8 %data_p_data, i11 %LineBuffer_2_addr" [../src/sobel_opt.cpp:125]   --->   Operation 86 'store' 'store_ln125' <Predicate = (icmp_ln118 & cmp_i_i126 & btm_read != 0 & btm_read != 1)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_3 : Operation 87 [1/1] (0.00ns)   --->   "%br_ln125 = br void %arrayidx6126.exit" [../src/sobel_opt.cpp:125]   --->   Operation 87 'br' 'br_ln125' <Predicate = (icmp_ln118 & cmp_i_i126 & btm_read != 0 & btm_read != 1)> <Delay = 0.00>
ST_3 : Operation 88 [1/1] (1.58ns)   --->   "%store_ln74 = store i1 %data_p_strb_3, i1 %data_p_strb" [../src/sobel_opt.cpp:74]   --->   Operation 88 'store' 'store_ln74' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 1.58>
ST_3 : Operation 89 [1/1] (0.00ns)   --->   "%br_ln126 = br void %if.end67" [../src/sobel_opt.cpp:126]   --->   Operation 89 'br' 'br_ln126' <Predicate = (icmp_ln118 & cmp_i_i126)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 3.25>
ST_4 : Operation 90 [1/1] (0.00ns)   --->   "%data_p_strb_4 = load i1 %data_p_strb" [../src/sobel_opt.cpp:147]   --->   Operation 90 'load' 'data_p_strb_4' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_4 : Operation 91 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i13 %col" [../src/sobel_opt.cpp:130]   --->   Operation 91 'zext' 'zext_ln130' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%LineBuffer_addr_2 = getelementptr i8 %LineBuffer, i64 0, i64 %zext_ln130" [../src/sobel_opt.cpp:130]   --->   Operation 92 'getelementptr' 'LineBuffer_addr_2' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%LineBuffer_1_addr_2 = getelementptr i8 %LineBuffer_1, i64 0, i64 %zext_ln130" [../src/sobel_opt.cpp:130]   --->   Operation 93 'getelementptr' 'LineBuffer_1_addr_2' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%LineBuffer_2_addr_2 = getelementptr i8 %LineBuffer_2, i64 0, i64 %zext_ln130" [../src/sobel_opt.cpp:130]   --->   Operation 94 'getelementptr' 'LineBuffer_2_addr_2' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_4 : Operation 95 [2/2] (3.25ns)   --->   "%LineBuffer_load = load i11 %LineBuffer_addr_2" [../src/sobel_opt.cpp:130]   --->   Operation 95 'load' 'LineBuffer_load' <Predicate = (icmp_ln118)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_4 : Operation 96 [2/2] (3.25ns)   --->   "%LineBuffer_1_load = load i11 %LineBuffer_1_addr_2" [../src/sobel_opt.cpp:130]   --->   Operation 96 'load' 'LineBuffer_1_load' <Predicate = (icmp_ln118)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_4 : Operation 97 [2/2] (3.25ns)   --->   "%LineBuffer_2_load = load i11 %LineBuffer_2_addr_2" [../src/sobel_opt.cpp:130]   --->   Operation 97 'load' 'LineBuffer_2_load' <Predicate = (icmp_ln118)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>

State 5 <SV = 4> <Delay = 6.66>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%WindowBuffer_19_load = load i8 %WindowBuffer_19"   --->   Operation 98 'load' 'WindowBuffer_19_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 99 [1/1] (0.00ns)   --->   "%WindowBuffer_23_load = load i8 %WindowBuffer_23"   --->   Operation 99 'load' 'WindowBuffer_23_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 100 [1/1] (0.00ns)   --->   "%WindowBuffer_21_load = load i8 %WindowBuffer_21"   --->   Operation 100 'load' 'WindowBuffer_21_load' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%WindowBuffer_20_out_load = load i8 %WindowBuffer_20_out" [../src/sobel_opt.cpp:11->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 101 'load' 'WindowBuffer_20_out_load' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%WindowBuffer_18_out_load = load i8 %WindowBuffer_18_out" [../src/sobel_opt.cpp:14->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 102 'load' 'WindowBuffer_18_out_load' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 103 [1/1] (0.00ns)   --->   "%WindowBuffer_22_out_load = load i8 %WindowBuffer_22_out" [../src/sobel_opt.cpp:15->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 103 'load' 'WindowBuffer_22_out_load' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 104 [1/2] ( I:3.25ns O:3.25ns )   --->   "%LineBuffer_load = load i11 %LineBuffer_addr_2" [../src/sobel_opt.cpp:130]   --->   Operation 104 'load' 'LineBuffer_load' <Predicate = (icmp_ln118)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_5 : Operation 105 [1/2] ( I:3.25ns O:3.25ns )   --->   "%LineBuffer_1_load = load i11 %LineBuffer_1_addr_2" [../src/sobel_opt.cpp:130]   --->   Operation 105 'load' 'LineBuffer_1_load' <Predicate = (icmp_ln118)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_5 : Operation 106 [1/2] ( I:3.25ns O:3.25ns )   --->   "%LineBuffer_2_load = load i11 %LineBuffer_2_addr_2" [../src/sobel_opt.cpp:130]   --->   Operation 106 'load' 'LineBuffer_2_load' <Predicate = (icmp_ln118)> <Delay = 3.25> <CoreInst = "RAM">   --->   Core 81 'RAM' <Latency = 1> <II = 1> <Delay = 3.25> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 8> <Depth = 1280> <RAM>
ST_5 : Operation 107 [1/1] (1.58ns)   --->   "%tmp = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.3i8.i8.i2, i2 0, i8 %LineBuffer_load, i2 1, i8 %LineBuffer_1_load, i2 2, i8 %LineBuffer_2_load, i8 0, i2 %top_read" [../src/sobel_opt.cpp:130]   --->   Operation 107 'sparsemux' 'tmp' <Predicate = (icmp_ln118)> <Delay = 1.58> <CoreInst = "OneHotSparseMux_HasDef">   --->   Core 140 'OneHotSparseMux_HasDef' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 108 [1/1] (1.58ns)   --->   "%tmp_1 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.3i8.i8.i2, i2 0, i8 %LineBuffer_load, i2 1, i8 %LineBuffer_1_load, i2 2, i8 %LineBuffer_2_load, i8 0, i2 %mid_read" [../src/sobel_opt.cpp:131]   --->   Operation 108 'sparsemux' 'tmp_1' <Predicate = (icmp_ln118)> <Delay = 1.58> <CoreInst = "OneHotSparseMux_HasDef">   --->   Core 140 'OneHotSparseMux_HasDef' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 109 [1/1] (1.58ns)   --->   "%tmp_2 = sparsemux i8 @_ssdm_op_SparseMux.ap_auto.3i8.i8.i2, i2 0, i8 %LineBuffer_load, i2 1, i8 %LineBuffer_1_load, i2 2, i8 %LineBuffer_2_load, i8 0, i2 %btm_read" [../src/sobel_opt.cpp:132]   --->   Operation 109 'sparsemux' 'tmp_2' <Predicate = (icmp_ln118)> <Delay = 1.58> <CoreInst = "OneHotSparseMux_HasDef">   --->   Core 140 'OneHotSparseMux_HasDef' <Latency = 0> <II = 1> <Delay = 1.58> <FuncUnit> <Opcode : 'sparsemux'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 110 [1/1] (0.00ns)   --->   "%M00 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %WindowBuffer_20_out_load, i1 0" [../src/sobel_opt.cpp:11->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 110 'bitconcatenate' 'M00' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 111 [1/1] (0.00ns)   --->   "%zext_ln11 = zext i9 %M00" [../src/sobel_opt.cpp:11->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 111 'zext' 'zext_ln11' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 112 [1/1] (0.00ns)   --->   "%M01 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %tmp_1, i1 0" [../src/sobel_opt.cpp:12->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 112 'bitconcatenate' 'M01' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln12 = zext i9 %M01" [../src/sobel_opt.cpp:12->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 113 'zext' 'zext_ln12' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 114 [1/1] (0.00ns)   --->   "%zext_ln14_1 = zext i8 %tmp_2" [../src/sobel_opt.cpp:14->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 114 'zext' 'zext_ln14_1' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 115 [1/1] (0.00ns)   --->   "%zext_ln14_2 = zext i8 %WindowBuffer_18_out_load" [../src/sobel_opt.cpp:14->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 115 'zext' 'zext_ln14_2' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 116 [1/1] (0.00ns)   --->   "%zext_ln14_3 = zext i8 %WindowBuffer_18_out_load" [../src/sobel_opt.cpp:14->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 116 'zext' 'zext_ln14_3' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 117 [1/1] (0.00ns)   --->   "%zext_ln15 = zext i8 %WindowBuffer_22_out_load" [../src/sobel_opt.cpp:15->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 117 'zext' 'zext_ln15' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 118 [1/1] (0.00ns)   --->   "%zext_ln15_1 = zext i8 %WindowBuffer_22_out_load" [../src/sobel_opt.cpp:15->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 118 'zext' 'zext_ln15_1' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 119 [1/1] (1.91ns)   --->   "%add_ln13_1 = add i9 %zext_ln14_3, i9 %zext_ln15_1" [../src/sobel_opt.cpp:13->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 119 'add' 'add_ln13_1' <Predicate = (icmp_ln118)> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 120 [1/1] (0.00ns)   --->   "%zext_ln13_1 = zext i9 %add_ln13_1" [../src/sobel_opt.cpp:13->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 120 'zext' 'zext_ln13_1' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 121 [1/1] (1.82ns)   --->   "%add_ln13 = add i10 %zext_ln13_1, i10 %zext_ln11" [../src/sobel_opt.cpp:13->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 121 'add' 'add_ln13' <Predicate = (icmp_ln118)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 122 [1/1] (1.82ns)   --->   "%add_ln18 = add i10 %zext_ln12, i10 %zext_ln14_1" [../src/sobel_opt.cpp:18->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 122 'add' 'add_ln18' <Predicate = (icmp_ln118)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 123 [1/1] (0.00ns)   --->   "%M00_1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %WindowBuffer_19_load, i1 0" [../src/sobel_opt.cpp:33->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 123 'bitconcatenate' 'M00_1' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln33 = zext i9 %M00_1" [../src/sobel_opt.cpp:33->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 124 'zext' 'zext_ln33' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 125 [1/1] (0.00ns)   --->   "%M01_1 = bitconcatenate i9 @_ssdm_op_BitConcatenate.i9.i8.i1, i8 %WindowBuffer_23_load, i1 0" [../src/sobel_opt.cpp:34->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 125 'bitconcatenate' 'M01_1' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln34 = zext i9 %M01_1" [../src/sobel_opt.cpp:34->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 126 'zext' 'zext_ln34' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 127 [1/1] (1.82ns)   --->   "%S00 = sub i10 %zext_ln34, i10 %zext_ln33" [../src/sobel_opt.cpp:36->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 127 'sub' 'S00' <Predicate = (icmp_ln118)> <Delay = 1.82> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.82> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 128 [1/1] (0.00ns)   --->   "%sext_ln35 = sext i10 %S00" [../src/sobel_opt.cpp:35->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 128 'sext' 'sext_ln35' <Predicate = (icmp_ln118)> <Delay = 0.00>
ST_5 : Operation 129 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%A00 = add i11 %sext_ln35, i11 %zext_ln15" [../src/sobel_opt.cpp:35->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 129 'add' 'A00' <Predicate = (icmp_ln118)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.87> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 130 [1/1] (3.75ns) (root node of TernaryAdder)   --->   "%out_pix_6 = sub i11 %A00, i11 %zext_ln14_2" [../src/sobel_opt.cpp:38->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 130 'sub' 'out_pix_6' <Predicate = (icmp_ln118)> <Delay = 3.75> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.87> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 131 [1/1] (1.58ns)   --->   "%store_ln131 = store i8 %tmp_1, i8 %WindowBuffer_21" [../src/sobel_opt.cpp:131]   --->   Operation 131 'store' 'store_ln131' <Predicate = (icmp_ln118)> <Delay = 1.58>
ST_5 : Operation 132 [1/1] (1.58ns)   --->   "%store_ln132 = store i8 %tmp_2, i8 %WindowBuffer_23" [../src/sobel_opt.cpp:132]   --->   Operation 132 'store' 'store_ln132' <Predicate = (icmp_ln118)> <Delay = 1.58>
ST_5 : Operation 133 [1/1] (1.58ns)   --->   "%store_ln130 = store i8 %tmp, i8 %WindowBuffer_19" [../src/sobel_opt.cpp:130]   --->   Operation 133 'store' 'store_ln130' <Predicate = (icmp_ln118)> <Delay = 1.58>
ST_5 : Operation 134 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_23_load, i8 %WindowBuffer_22_out"   --->   Operation 134 'store' 'store_ln0' <Predicate = (icmp_ln118)> <Delay = 1.58>
ST_5 : Operation 135 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_19_load, i8 %WindowBuffer_18_out"   --->   Operation 135 'store' 'store_ln0' <Predicate = (icmp_ln118)> <Delay = 1.58>
ST_5 : Operation 136 [1/1] (1.58ns)   --->   "%store_ln0 = store i8 %WindowBuffer_21_load, i8 %WindowBuffer_20_out"   --->   Operation 136 'store' 'store_ln0' <Predicate = (icmp_ln118)> <Delay = 1.58>

State 6 <SV = 5> <Delay = 6.65>
ST_6 : Operation 137 [1/1] (0.00ns)   --->   "%zext_ln13 = zext i8 %tmp" [../src/sobel_opt.cpp:13->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 137 'zext' 'zext_ln13' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 138 [1/1] (0.00ns)   --->   "%zext_ln14 = zext i8 %tmp_2" [../src/sobel_opt.cpp:14->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 138 'zext' 'zext_ln14' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 139 [1/1] (0.00ns)   --->   "%zext_ln16 = zext i10 %add_ln13" [../src/sobel_opt.cpp:16->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 139 'zext' 'zext_ln16' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 140 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%out_pix_5 = sub i11 %zext_ln13, i11 %zext_ln16" [../src/sobel_opt.cpp:16->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 140 'sub' 'out_pix_5' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.87> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln18 = zext i10 %add_ln18" [../src/sobel_opt.cpp:18->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 141 'zext' 'zext_ln18' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 142 [1/1] (3.75ns) (root node of TernaryAdder)   --->   "%out_pix = add i11 %zext_ln18, i11 %out_pix_5" [../src/sobel_opt.cpp:18->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 142 'add' 'out_pix' <Predicate = true> <Delay = 3.75> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.87> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 143 [1/1] (0.00ns)   --->   "%tmp_3 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %out_pix, i32 10" [../src/sobel_opt.cpp:20->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 143 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 144 [1/1] (0.00ns)   --->   "%tmp_4 = partselect i3 @_ssdm_op_PartSelect.i3.i11.i32.i32, i11 %out_pix, i32 8, i32 10" [../src/sobel_opt.cpp:24->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 144 'partselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 145 [1/1] (1.65ns)   --->   "%icmp_ln24 = icmp_sgt  i3 %tmp_4, i3 0" [../src/sobel_opt.cpp:24->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 145 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node g_x)   --->   "%trunc_ln28 = trunc i11 %out_pix" [../src/sobel_opt.cpp:28->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 146 'trunc' 'trunc_ln28' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node g_x)   --->   "%xor_ln28 = xor i1 %tmp_3, i1 1" [../src/sobel_opt.cpp:28->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 147 'xor' 'xor_ln28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node g_x)   --->   "%select_ln28 = select i1 %xor_ln28, i8 255, i8 0" [../src/sobel_opt.cpp:28->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 148 'select' 'select_ln28' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node g_x)   --->   "%or_ln28 = or i1 %tmp_3, i1 %icmp_ln24" [../src/sobel_opt.cpp:28->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 149 'or' 'or_ln28' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 150 [1/1] (1.24ns) (out node of the LUT)   --->   "%g_x = select i1 %or_ln28, i8 %select_ln28, i8 %trunc_ln28" [../src/sobel_opt.cpp:28->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133]   --->   Operation 150 'select' 'g_x' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 151 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%out_pix_7 = sub i11 %out_pix_6, i11 %zext_ln13" [../src/sobel_opt.cpp:39->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 151 'sub' 'out_pix_7' <Predicate = true> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.87> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 152 [1/1] (3.75ns) (root node of TernaryAdder)   --->   "%out_pix_4 = add i11 %out_pix_7, i11 %zext_ln14" [../src/sobel_opt.cpp:40->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 152 'add' 'out_pix_4' <Predicate = true> <Delay = 3.75> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.87> <IPBlock> <Opcode : '' 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_6 : Operation 153 [1/1] (0.00ns)   --->   "%tmp_5 = bitselect i1 @_ssdm_op_BitSelect.i1.i11.i32, i11 %out_pix_4, i32 10" [../src/sobel_opt.cpp:42->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 153 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 154 [1/1] (0.00ns)   --->   "%tmp_6 = partselect i3 @_ssdm_op_PartSelect.i3.i11.i32.i32, i11 %out_pix_4, i32 8, i32 10" [../src/sobel_opt.cpp:46->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 154 'partselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 155 [1/1] (1.65ns)   --->   "%icmp_ln46 = icmp_sgt  i3 %tmp_6, i3 0" [../src/sobel_opt.cpp:46->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 155 'icmp' 'icmp_ln46' <Predicate = true> <Delay = 1.65> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.65> <FuncUnit> <Opcode : 'seteq' 'setne' 'setle' 'setge' 'setlt' 'setgt'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node g_y)   --->   "%trunc_ln50 = trunc i11 %out_pix_4" [../src/sobel_opt.cpp:50->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 156 'trunc' 'trunc_ln50' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node g_y)   --->   "%xor_ln50 = xor i1 %tmp_5, i1 1" [../src/sobel_opt.cpp:50->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 157 'xor' 'xor_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 158 [1/1] (0.00ns) (grouped into LUT with out node g_y)   --->   "%select_ln50 = select i1 %xor_ln50, i8 255, i8 0" [../src/sobel_opt.cpp:50->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 158 'select' 'select_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_6 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node g_y)   --->   "%or_ln50 = or i1 %tmp_5, i1 %icmp_ln46" [../src/sobel_opt.cpp:50->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 159 'or' 'or_ln50' <Predicate = true> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 160 [1/1] (1.24ns) (out node of the LUT)   --->   "%g_y = select i1 %or_ln50, i8 %select_ln50, i8 %trunc_ln50" [../src/sobel_opt.cpp:50->../src/sobel_opt.cpp:58->../src/sobel_opt.cpp:133]   --->   Operation 160 'select' 'g_y' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 7 <SV = 6> <Delay = 4.73>
ST_7 : Operation 161 [1/1] (0.00ns)   --->   "%zext_ln59 = zext i8 %g_x" [../src/sobel_opt.cpp:59->../src/sobel_opt.cpp:133]   --->   Operation 161 'zext' 'zext_ln59' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 162 [1/1] (0.00ns)   --->   "%zext_ln59_1 = zext i8 %g_y" [../src/sobel_opt.cpp:59->../src/sobel_opt.cpp:133]   --->   Operation 162 'zext' 'zext_ln59_1' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 163 [1/1] (1.91ns)   --->   "%sobel_1 = add i8 %g_x, i8 %g_y" [../src/sobel_opt.cpp:59->../src/sobel_opt.cpp:133]   --->   Operation 163 'add' 'sobel_1' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 164 [1/1] (1.91ns)   --->   "%temp = add i9 %zext_ln59, i9 %zext_ln59_1" [../src/sobel_opt.cpp:59->../src/sobel_opt.cpp:133]   --->   Operation 164 'add' 'temp' <Predicate = true> <Delay = 1.91> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.91> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 165 [1/1] (0.00ns)   --->   "%tmp_7 = bitselect i1 @_ssdm_op_BitSelect.i1.i9.i32, i9 %temp, i32 8" [../src/sobel_opt.cpp:60->../src/sobel_opt.cpp:133]   --->   Operation 165 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 166 [1/1] (1.24ns)   --->   "%sobel_2 = select i1 %tmp_7, i8 255, i8 %sobel_1" [../src/sobel_opt.cpp:60->../src/sobel_opt.cpp:133]   --->   Operation 166 'select' 'sobel_2' <Predicate = true> <Delay = 1.24> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 1.24> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_7 : Operation 167 [1/1] (1.57ns)   --->   "%write_ln147 = write void @_ssdm_op_Write.axis.volatile.i8P0A.i1P0A.i1P0A.i1P0A, i8 %dst_V_data_V, i1 %dst_V_keep_V, i1 %dst_V_strb_V, i1 %dst_V_last_V, i8 %sobel_2, i1 1, i1 %data_p_strb_4, i1 %data_p_last" [../src/sobel_opt.cpp:147]   --->   Operation 167 'write' 'write_ln147' <Predicate = true> <Delay = 1.57> <CoreInst = "regslice">   --->   Core 135 'regslice' <Latency = 0> <II = 1> <Delay = 2.22> <Adapter> <Opcode : 'read' 'write'>
ST_7 : Operation 168 [1/1] (0.00ns)   --->   "%br_ln118 = br void %for.body51" [../src/sobel_opt.cpp:118]   --->   Operation 168 'br' 'br_ln118' <Predicate = true> <Delay = 0.00>

State 8 <SV = 5> <Delay = 0.00>
ST_8 : Operation 169 [1/1] (0.00ns)   --->   "%store_ln0 = store i8 %WindowBuffer_21_load, i8 %WindowBuffer_21_out"   --->   Operation 169 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 170 [1/1] (0.00ns)   --->   "%store_ln0 = store i8 %WindowBuffer_23_load, i8 %WindowBuffer_23_out"   --->   Operation 170 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 171 [1/1] (0.00ns)   --->   "%store_ln0 = store i8 %WindowBuffer_19_load, i8 %WindowBuffer_19_out"   --->   Operation 171 'store' 'store_ln0' <Predicate = true> <Delay = 0.00>

State 9 <SV = 6> <Delay = 0.00>

State 10 <SV = 7> <Delay = 1.58>
ST_10 : Operation 172 [1/1] (0.00ns)   --->   "%data_p_strb_load = load i1 %data_p_strb"   --->   Operation 172 'load' 'data_p_strb_load' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 173 [1/1] (0.00ns)   --->   "%write_ln0 = write void @_ssdm_op_Write.ap_auto.i1P0A, i1 %data_p_strb_4_out, i1 %data_p_strb_load"   --->   Operation 173 'write' 'write_ln0' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (1.58ns)   --->   "%ret_ln0 = ret"   --->   Operation 174 'ret' 'ret_ln0' <Predicate = true> <Delay = 1.58>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10.000ns, clock uncertainty: 2.700ns.

 <State 1>: 2.522ns
The critical path consists of the following:
	wire read operation ('rows_read') on port 'rows' [39]  (0.000 ns)
	'icmp' operation 1 bit ('cmp_i_i126') [63]  (2.522 ns)

 <State 2>: 4.140ns
The critical path consists of the following:
	'load' operation 13 bit ('col', ../src/sobel_opt.cpp:118) on local variable 'col', ../src/sobel_opt.cpp:84 [74]  (0.000 ns)
	'icmp' operation 1 bit ('icmp_ln118', ../src/sobel_opt.cpp:118) [79]  (2.552 ns)
	'store' operation 0 bit ('store_ln84', ../src/sobel_opt.cpp:84) of variable 'col', ../src/sobel_opt.cpp:118 on local variable 'col', ../src/sobel_opt.cpp:84 [200]  (1.588 ns)

 <State 3>: 4.819ns
The critical path consists of the following:
	'store' operation 0 bit ('store_ln128', ../src/sobel_opt.cpp:128) of constant 0 on array 'LineBuffer_1' [94]  (3.254 ns)
	blocking operation 1.565 ns on control path)

 <State 4>: 3.254ns
The critical path consists of the following:
	'getelementptr' operation 11 bit ('LineBuffer_addr_2', ../src/sobel_opt.cpp:130) [131]  (0.000 ns)
	'load' operation 8 bit ('LineBuffer_load', ../src/sobel_opt.cpp:130) on array 'LineBuffer' [134]  (3.254 ns)

 <State 5>: 6.665ns
The critical path consists of the following:
	'load' operation 8 bit ('LineBuffer_load', ../src/sobel_opt.cpp:130) on array 'LineBuffer' [134]  (3.254 ns)
	'sparsemux' operation 8 bit ('tmp_1', ../src/sobel_opt.cpp:131) [138]  (1.588 ns)
	'add' operation 10 bit ('add_ln18', ../src/sobel_opt.cpp:18->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133) [156]  (1.823 ns)

 <State 6>: 6.655ns
The critical path consists of the following:
	'sub' operation 11 bit ('out_pix_5', ../src/sobel_opt.cpp:16->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133) [155]  (0.000 ns)
	'add' operation 11 bit ('out_pix', ../src/sobel_opt.cpp:18->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133) [158]  (3.757 ns)
	'icmp' operation 1 bit ('icmp_ln24', ../src/sobel_opt.cpp:24->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133) [161]  (1.650 ns)
	'or' operation 1 bit ('or_ln28', ../src/sobel_opt.cpp:28->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133) [165]  (0.000 ns)
	'select' operation 8 bit ('g_x', ../src/sobel_opt.cpp:28->../src/sobel_opt.cpp:57->../src/sobel_opt.cpp:133) [166]  (1.248 ns)

 <State 7>: 4.736ns
The critical path consists of the following:
	'add' operation 9 bit ('temp', ../src/sobel_opt.cpp:59->../src/sobel_opt.cpp:133) [188]  (1.915 ns)
	'select' operation 8 bit ('sobel', ../src/sobel_opt.cpp:60->../src/sobel_opt.cpp:133) [190]  (1.248 ns)
	axis write operation ('write_ln147', ../src/sobel_opt.cpp:147) on port 'dst_V_data_V' (../src/sobel_opt.cpp:147) [193]  (1.573 ns)

 <State 8>: 0.000ns
The critical path consists of the following:

 <State 9>: 0.000ns
The critical path consists of the following:

 <State 10>: 1.588ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
