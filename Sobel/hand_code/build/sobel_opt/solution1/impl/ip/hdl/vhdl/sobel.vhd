-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity sobel is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    src_TVALID : IN STD_LOGIC;
    src_TREADY : OUT STD_LOGIC;
    src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
    src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    dst_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    dst_TVALID : OUT STD_LOGIC;
    dst_TREADY : IN STD_LOGIC;
    dst_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of sobel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "sobel_sobel,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.665000,HLS_SYN_LAT=235727,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=820,HLS_SYN_LUT=1609,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal rows : STD_LOGIC_VECTOR (31 downto 0);
    signal cols : STD_LOGIC_VECTOR (31 downto 0);
    signal cols_read_reg_647 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal rows_read_reg_654 : STD_LOGIC_VECTOR (31 downto 0);
    signal empty_fu_437_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal empty_reg_660 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_fu_444_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_668 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal row_2_reg_673 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal zext_ln98_fu_480_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln98_reg_696 : STD_LOGIC_VECTOR (31 downto 0);
    signal btm_fu_489_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal btm_reg_704 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_fu_505_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_reg_709 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_fu_521_p7 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_reg_714 : STD_LOGIC_VECTOR (1 downto 0);
    signal cmp_i_i80_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp_i_i80_reg_719 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal LineBuffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuffer_ce0 : STD_LOGIC;
    signal LineBuffer_we0 : STD_LOGIC;
    signal LineBuffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_ce1 : STD_LOGIC;
    signal LineBuffer_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal LineBuffer_1_ce0 : STD_LOGIC;
    signal LineBuffer_1_we0 : STD_LOGIC;
    signal LineBuffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_1_ce1 : STD_LOGIC;
    signal LineBuffer_1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal LineBuffer_2_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_done : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_idle : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_ready : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_src_TREADY : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_data_p_strb_1_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_data_p_strb_1_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_done : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_idle : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_ready : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_ce1 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_ce1 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_ce0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_we0 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_ce1 : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TREADY : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TKEEP : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_src_TREADY : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_21_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_21_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_23_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_23_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_19_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_19_out_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_22_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_22_out_o_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_18_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_18_out_o_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_20_out_o : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_20_out_o_ap_vld : STD_LOGIC;
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_data_p_strb_4_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_data_p_strb_4_out_ap_vld : STD_LOGIC;
    signal data_p_strb_2_reg_154 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal WindowBuffer_8_reg_164 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln98_fu_484_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal WindowBuffer_7_reg_177 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_6_reg_190 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_WindowBuffer_11_phi_fu_206_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_WindowBuffer_10_phi_fu_221_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_WindowBuffer_9_phi_fu_236_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_14_reg_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_13_reg_261 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_12_reg_274 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_17_reg_287 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_16_reg_303 : STD_LOGIC_VECTOR (7 downto 0);
    signal WindowBuffer_15_reg_319 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal dst_TDATA_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_TKEEP_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_TSTRB_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal dst_TLAST_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal WindowBuffer_3_fu_110 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal WindowBuffer_5_fu_118 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal WindowBuffer_1_fu_102 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal WindowBuffer_4_fu_114 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal WindowBuffer_fu_98 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal WindowBuffer_2_fu_106 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal data_p_strb_4_loc_fu_122 : STD_LOGIC_VECTOR (0 downto 0);
    signal lb_r_i_fu_90 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal lb_r_i_2_fu_553_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal row_fu_94 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    signal row_3_fu_561_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal lb_r_i_1_fu_541_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln150_fu_547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal regslice_both_dst_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_apdone_blk : STD_LOGIC;
    signal src_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal src_TVALID_int_regslice : STD_LOGIC;
    signal src_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_src_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal src_TKEEP_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal src_TSTRB_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_apdone_blk : STD_LOGIC;
    signal src_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_src_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_src_V_last_V_U_ack_in : STD_LOGIC;
    signal dst_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_TVALID_int_regslice : STD_LOGIC;
    signal dst_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_dst_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal dst_TKEEP_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dst_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal dst_TSTRB_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dst_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_apdone_blk : STD_LOGIC;
    signal dst_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_dst_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_dst_V_last_V_U_vld_out : STD_LOGIC;
    signal btm_fu_489_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal btm_fu_489_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_fu_505_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mid_fu_505_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_fu_521_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal top_fu_521_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component sobel_sobel_Pipeline_VITIS_LOOP_88_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        src_TVALID : IN STD_LOGIC;
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        LineBuffer_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_1_ce0 : OUT STD_LOGIC;
        LineBuffer_1_we0 : OUT STD_LOGIC;
        LineBuffer_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_ce0 : OUT STD_LOGIC;
        LineBuffer_we0 : OUT STD_LOGIC;
        LineBuffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        src_TREADY : OUT STD_LOGIC;
        src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        data_p_strb_1_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_p_strb_1_out_ap_vld : OUT STD_LOGIC );
    end component;


    component sobel_sobel_Pipeline_VITIS_LOOP_118_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        WindowBuffer_13 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_14 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_12 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_17 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_15 : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_16 : IN STD_LOGIC_VECTOR (7 downto 0);
        data_p_strb_2 : IN STD_LOGIC_VECTOR (0 downto 0);
        cols : IN STD_LOGIC_VECTOR (31 downto 0);
        LineBuffer_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_ce0 : OUT STD_LOGIC;
        LineBuffer_we0 : OUT STD_LOGIC;
        LineBuffer_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_ce1 : OUT STD_LOGIC;
        LineBuffer_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_1_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_1_ce0 : OUT STD_LOGIC;
        LineBuffer_1_we0 : OUT STD_LOGIC;
        LineBuffer_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_1_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_1_ce1 : OUT STD_LOGIC;
        LineBuffer_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_2_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_2_ce0 : OUT STD_LOGIC;
        LineBuffer_2_we0 : OUT STD_LOGIC;
        LineBuffer_2_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        LineBuffer_2_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        LineBuffer_2_ce1 : OUT STD_LOGIC;
        LineBuffer_2_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
        top : IN STD_LOGIC_VECTOR (1 downto 0);
        mid : IN STD_LOGIC_VECTOR (1 downto 0);
        btm : IN STD_LOGIC_VECTOR (1 downto 0);
        sub : IN STD_LOGIC_VECTOR (31 downto 0);
        cmp_i_i80 : IN STD_LOGIC_VECTOR (0 downto 0);
        dst_TDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_TVALID : OUT STD_LOGIC;
        dst_TREADY : IN STD_LOGIC;
        dst_TKEEP : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        dst_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        src_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        src_TVALID : IN STD_LOGIC;
        src_TREADY : OUT STD_LOGIC;
        src_TKEEP : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        src_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        zext_ln98 : IN STD_LOGIC_VECTOR (12 downto 0);
        rows : IN STD_LOGIC_VECTOR (30 downto 0);
        WindowBuffer_21_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_21_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_23_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_23_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_19_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_19_out_ap_vld : OUT STD_LOGIC;
        WindowBuffer_22_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_22_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_22_out_o_ap_vld : OUT STD_LOGIC;
        WindowBuffer_18_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_18_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_18_out_o_ap_vld : OUT STD_LOGIC;
        WindowBuffer_20_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_20_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
        WindowBuffer_20_out_o_ap_vld : OUT STD_LOGIC;
        data_p_strb_4_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        data_p_strb_4_out_ap_vld : OUT STD_LOGIC );
    end component;


    component sobel_sparsemux_5_2_2_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (1 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        def : IN STD_LOGIC_VECTOR (1 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component sobel_LineBuffer_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component sobel_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        rows : OUT STD_LOGIC_VECTOR (31 downto 0);
        cols : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component sobel_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    LineBuffer_U : component sobel_LineBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => LineBuffer_address0,
        ce0 => LineBuffer_ce0,
        we0 => LineBuffer_we0,
        d0 => LineBuffer_d0,
        address1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_address1,
        ce1 => LineBuffer_ce1,
        q1 => LineBuffer_q1);

    LineBuffer_1_U : component sobel_LineBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => LineBuffer_1_address0,
        ce0 => LineBuffer_1_ce0,
        we0 => LineBuffer_1_we0,
        d0 => LineBuffer_1_d0,
        address1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_address1,
        ce1 => LineBuffer_1_ce1,
        q1 => LineBuffer_1_q1);

    LineBuffer_2_U : component sobel_LineBuffer_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_address0,
        ce0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_ce0,
        we0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_we0,
        d0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_d0,
        address1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_address1,
        ce1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_ce1,
        q1 => LineBuffer_2_q1);

    grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335 : component sobel_sobel_Pipeline_VITIS_LOOP_88_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start,
        ap_done => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_done,
        ap_idle => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_idle,
        ap_ready => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_ready,
        src_TVALID => src_TVALID_int_regslice,
        cols => cols_read_reg_647,
        LineBuffer_1_address0 => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_address0,
        LineBuffer_1_ce0 => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_ce0,
        LineBuffer_1_we0 => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_we0,
        LineBuffer_1_d0 => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_d0,
        LineBuffer_address0 => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_address0,
        LineBuffer_ce0 => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_ce0,
        LineBuffer_we0 => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_we0,
        LineBuffer_d0 => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_d0,
        src_TDATA => src_TDATA_int_regslice,
        src_TREADY => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_src_TREADY,
        src_TKEEP => src_TKEEP_int_regslice,
        src_TSTRB => src_TSTRB_int_regslice,
        src_TLAST => src_TLAST_int_regslice,
        data_p_strb_1_out => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_data_p_strb_1_out,
        data_p_strb_1_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_data_p_strb_1_out_ap_vld);

    grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352 : component sobel_sobel_Pipeline_VITIS_LOOP_118_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start,
        ap_done => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_done,
        ap_idle => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_idle,
        ap_ready => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_ready,
        WindowBuffer_13 => WindowBuffer_13_reg_261,
        WindowBuffer_14 => WindowBuffer_14_reg_248,
        WindowBuffer_12 => WindowBuffer_12_reg_274,
        WindowBuffer_17 => WindowBuffer_17_reg_287,
        WindowBuffer_15 => WindowBuffer_15_reg_319,
        WindowBuffer_16 => WindowBuffer_16_reg_303,
        data_p_strb_2 => data_p_strb_2_reg_154,
        cols => cols_read_reg_647,
        LineBuffer_address0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_address0,
        LineBuffer_ce0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_ce0,
        LineBuffer_we0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_we0,
        LineBuffer_d0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_d0,
        LineBuffer_address1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_address1,
        LineBuffer_ce1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_ce1,
        LineBuffer_q1 => LineBuffer_q1,
        LineBuffer_1_address0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_address0,
        LineBuffer_1_ce0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_ce0,
        LineBuffer_1_we0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_we0,
        LineBuffer_1_d0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_d0,
        LineBuffer_1_address1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_address1,
        LineBuffer_1_ce1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_ce1,
        LineBuffer_1_q1 => LineBuffer_1_q1,
        LineBuffer_2_address0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_address0,
        LineBuffer_2_ce0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_ce0,
        LineBuffer_2_we0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_we0,
        LineBuffer_2_d0 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_d0,
        LineBuffer_2_address1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_address1,
        LineBuffer_2_ce1 => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_2_ce1,
        LineBuffer_2_q1 => LineBuffer_2_q1,
        top => top_reg_714,
        mid => mid_reg_709,
        btm => btm_reg_704,
        sub => sub_reg_668,
        cmp_i_i80 => cmp_i_i80_reg_719,
        dst_TDATA => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TDATA,
        dst_TVALID => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID,
        dst_TREADY => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TREADY,
        dst_TKEEP => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TKEEP,
        dst_TSTRB => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TSTRB,
        dst_TLAST => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TLAST,
        src_TDATA => src_TDATA_int_regslice,
        src_TVALID => src_TVALID_int_regslice,
        src_TREADY => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_src_TREADY,
        src_TKEEP => src_TKEEP_int_regslice,
        src_TSTRB => src_TSTRB_int_regslice,
        src_TLAST => src_TLAST_int_regslice,
        zext_ln98 => row_2_reg_673,
        rows => empty_reg_660,
        WindowBuffer_21_out => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_21_out,
        WindowBuffer_21_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_21_out_ap_vld,
        WindowBuffer_23_out => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_23_out,
        WindowBuffer_23_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_23_out_ap_vld,
        WindowBuffer_19_out => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_19_out,
        WindowBuffer_19_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_19_out_ap_vld,
        WindowBuffer_22_out_i => WindowBuffer_4_fu_114,
        WindowBuffer_22_out_o => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_22_out_o,
        WindowBuffer_22_out_o_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_22_out_o_ap_vld,
        WindowBuffer_18_out_i => WindowBuffer_fu_98,
        WindowBuffer_18_out_o => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_18_out_o,
        WindowBuffer_18_out_o_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_18_out_o_ap_vld,
        WindowBuffer_20_out_i => WindowBuffer_2_fu_106,
        WindowBuffer_20_out_o => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_20_out_o,
        WindowBuffer_20_out_o_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_20_out_o_ap_vld,
        data_p_strb_4_out => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_data_p_strb_4_out,
        data_p_strb_4_out_ap_vld => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_data_p_strb_4_out_ap_vld);

    CTRL_s_axi_U : component sobel_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        rows => rows,
        cols => cols,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    sparsemux_5_2_2_1_1_U46 : component sobel_sparsemux_5_2_2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 2,
        CASE1 => "01",
        din1_WIDTH => 2,
        def_WIDTH => 2,
        sel_WIDTH => 2,
        dout_WIDTH => 2)
    port map (
        din0 => ap_const_lv2_2,
        din1 => ap_const_lv2_1,
        def => ap_const_lv2_0,
        sel => lb_r_i_fu_90,
        dout => btm_fu_489_p7);

    sparsemux_5_2_2_1_1_U47 : component sobel_sparsemux_5_2_2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 2,
        CASE1 => "01",
        din1_WIDTH => 2,
        def_WIDTH => 2,
        sel_WIDTH => 2,
        dout_WIDTH => 2)
    port map (
        din0 => ap_const_lv2_1,
        din1 => ap_const_lv2_0,
        def => ap_const_lv2_2,
        sel => lb_r_i_fu_90,
        dout => mid_fu_505_p7);

    sparsemux_5_2_2_1_1_U48 : component sobel_sparsemux_5_2_2_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "10",
        din0_WIDTH => 2,
        CASE1 => "01",
        din1_WIDTH => 2,
        def_WIDTH => 2,
        sel_WIDTH => 2,
        dout_WIDTH => 2)
    port map (
        din0 => ap_const_lv2_0,
        din1 => ap_const_lv2_2,
        def => ap_const_lv2_1,
        sel => lb_r_i_fu_90,
        dout => top_fu_521_p7);

    regslice_both_src_V_data_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TDATA,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_data_V_U_ack_in,
        data_out => src_TDATA_int_regslice,
        vld_out => src_TVALID_int_regslice,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_data_V_U_apdone_blk);

    regslice_both_src_V_keep_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TKEEP,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_keep_V_U_ack_in,
        data_out => src_TKEEP_int_regslice,
        vld_out => regslice_both_src_V_keep_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_keep_V_U_apdone_blk);

    regslice_both_src_V_strb_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TSTRB,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_strb_V_U_ack_in,
        data_out => src_TSTRB_int_regslice,
        vld_out => regslice_both_src_V_strb_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_strb_V_U_apdone_blk);

    regslice_both_src_V_last_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => src_TLAST,
        vld_in => src_TVALID,
        ack_in => regslice_both_src_V_last_V_U_ack_in,
        data_out => src_TLAST_int_regslice,
        vld_out => regslice_both_src_V_last_V_U_vld_out,
        ack_out => src_TREADY_int_regslice,
        apdone_blk => regslice_both_src_V_last_V_U_apdone_blk);

    regslice_both_dst_V_data_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dst_TDATA_int_regslice,
        vld_in => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID,
        ack_in => dst_TREADY_int_regslice,
        data_out => dst_TDATA,
        vld_out => regslice_both_dst_V_data_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_data_V_U_apdone_blk);

    regslice_both_dst_V_keep_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dst_TKEEP_int_regslice,
        vld_in => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID,
        ack_in => regslice_both_dst_V_keep_V_U_ack_in_dummy,
        data_out => dst_TKEEP,
        vld_out => regslice_both_dst_V_keep_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_keep_V_U_apdone_blk);

    regslice_both_dst_V_strb_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dst_TSTRB_int_regslice,
        vld_in => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID,
        ack_in => regslice_both_dst_V_strb_V_U_ack_in_dummy,
        data_out => dst_TSTRB,
        vld_out => regslice_both_dst_V_strb_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_strb_V_U_apdone_blk);

    regslice_both_dst_V_last_V_U : component sobel_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => dst_TLAST_int_regslice,
        vld_in => grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID,
        ack_in => regslice_both_dst_V_last_V_U_ack_in_dummy,
        data_out => dst_TLAST,
        vld_out => regslice_both_dst_V_last_V_U_vld_out,
        ack_out => dst_TREADY,
        apdone_blk => regslice_both_dst_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_ready = ap_const_logic_1)) then 
                    grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
                    grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_ready = ap_const_logic_1)) then 
                    grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    WindowBuffer_12_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((top_reg_714 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                WindowBuffer_12_reg_274 <= ap_const_lv8_0;
            elsif (((not((top_reg_714 = ap_const_lv2_1)) and not((top_reg_714 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((top_reg_714 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                WindowBuffer_12_reg_274 <= WindowBuffer_1_fu_102;
            end if; 
        end if;
    end process;

    WindowBuffer_13_reg_261_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((top_reg_714 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                WindowBuffer_13_reg_261 <= ap_const_lv8_0;
            elsif (((not((top_reg_714 = ap_const_lv2_1)) and not((top_reg_714 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((top_reg_714 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                WindowBuffer_13_reg_261 <= WindowBuffer_3_fu_110;
            end if; 
        end if;
    end process;

    WindowBuffer_14_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((top_reg_714 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((top_reg_714 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                WindowBuffer_14_reg_248 <= WindowBuffer_5_fu_118;
            elsif ((not((top_reg_714 = ap_const_lv2_1)) and not((top_reg_714 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                WindowBuffer_14_reg_248 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    WindowBuffer_15_reg_319_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((btm_reg_704 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                WindowBuffer_15_reg_319 <= ap_const_lv8_0;
            elsif (((not((btm_reg_704 = ap_const_lv2_1)) and not((btm_reg_704 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((btm_reg_704 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                WindowBuffer_15_reg_319 <= ap_phi_mux_WindowBuffer_9_phi_fu_236_p6;
            end if; 
        end if;
    end process;

    WindowBuffer_16_reg_303_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((btm_reg_704 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                WindowBuffer_16_reg_303 <= ap_const_lv8_0;
            elsif (((not((btm_reg_704 = ap_const_lv2_1)) and not((btm_reg_704 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((btm_reg_704 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                WindowBuffer_16_reg_303 <= ap_phi_mux_WindowBuffer_10_phi_fu_221_p6;
            end if; 
        end if;
    end process;

    WindowBuffer_17_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((btm_reg_704 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((btm_reg_704 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
                WindowBuffer_17_reg_287 <= ap_phi_mux_WindowBuffer_11_phi_fu_206_p6;
            elsif ((not((btm_reg_704 = ap_const_lv2_1)) and not((btm_reg_704 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                WindowBuffer_17_reg_287 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    WindowBuffer_1_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                WindowBuffer_1_fu_102 <= ap_const_lv8_0;
            elsif (((grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_19_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                WindowBuffer_1_fu_102 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_19_out;
            end if; 
        end if;
    end process;

    WindowBuffer_2_fu_106_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                WindowBuffer_2_fu_106 <= ap_const_lv8_0;
            elsif (((grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_20_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                WindowBuffer_2_fu_106 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_20_out_o;
            end if; 
        end if;
    end process;

    WindowBuffer_3_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                WindowBuffer_3_fu_110 <= ap_const_lv8_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_21_out_ap_vld = ap_const_logic_1))) then 
                WindowBuffer_3_fu_110 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_21_out;
            end if; 
        end if;
    end process;

    WindowBuffer_4_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                WindowBuffer_4_fu_114 <= ap_const_lv8_0;
            elsif (((grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_22_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                WindowBuffer_4_fu_114 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_22_out_o;
            end if; 
        end if;
    end process;

    WindowBuffer_5_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                WindowBuffer_5_fu_118 <= ap_const_lv8_0;
            elsif (((grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_23_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                WindowBuffer_5_fu_118 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_23_out;
            end if; 
        end if;
    end process;

    WindowBuffer_6_reg_190_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((top_fu_521_p7 = ap_const_lv2_0) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_6_reg_190 <= ap_const_lv8_0;
            elsif (((not((top_fu_521_p7 = ap_const_lv2_1)) and not((top_fu_521_p7 = ap_const_lv2_0)) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((top_fu_521_p7 = ap_const_lv2_1) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_6_reg_190 <= WindowBuffer_fu_98;
            end if; 
        end if;
    end process;

    WindowBuffer_7_reg_177_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((top_fu_521_p7 = ap_const_lv2_1) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_7_reg_177 <= ap_const_lv8_0;
            elsif (((not((top_fu_521_p7 = ap_const_lv2_1)) and not((top_fu_521_p7 = ap_const_lv2_0)) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((top_fu_521_p7 = ap_const_lv2_0) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_7_reg_177 <= WindowBuffer_2_fu_106;
            end if; 
        end if;
    end process;

    WindowBuffer_8_reg_164_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((top_fu_521_p7 = ap_const_lv2_1) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((top_fu_521_p7 = ap_const_lv2_0) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5)))) then 
                WindowBuffer_8_reg_164 <= WindowBuffer_4_fu_114;
            elsif ((not((top_fu_521_p7 = ap_const_lv2_1)) and not((top_fu_521_p7 = ap_const_lv2_0)) and (icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                WindowBuffer_8_reg_164 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    WindowBuffer_fu_98_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                WindowBuffer_fu_98 <= ap_const_lv8_0;
            elsif (((grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_18_out_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
                WindowBuffer_fu_98 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_WindowBuffer_18_out_o;
            end if; 
        end if;
    end process;

    data_p_strb_2_reg_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                data_p_strb_2_reg_154 <= data_p_strb_4_loc_fu_122;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                data_p_strb_2_reg_154 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_data_p_strb_1_out;
            end if; 
        end if;
    end process;

    lb_r_i_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                lb_r_i_fu_90 <= ap_const_lv2_2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                lb_r_i_fu_90 <= lb_r_i_2_fu_553_p3;
            end if; 
        end if;
    end process;

    row_fu_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                row_fu_94 <= ap_const_lv13_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                row_fu_94 <= row_3_fu_561_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                btm_reg_704 <= btm_fu_489_p7;
                mid_reg_709 <= mid_fu_505_p7;
                row_2_reg_673 <= row_fu_94;
                top_reg_714 <= top_fu_521_p7;
                    zext_ln98_reg_696(12 downto 0) <= zext_ln98_fu_480_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                cmp_i_i80_reg_719 <= cmp_i_i80_fu_537_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                cols_read_reg_647 <= cols;
                empty_reg_660 <= empty_fu_437_p1;
                rows_read_reg_654 <= rows;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_data_p_strb_4_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                data_p_strb_4_loc_fu_122 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_data_p_strb_4_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID = ap_const_logic_1))) then
                dst_TDATA_reg <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TDATA;
                dst_TKEEP_reg <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TKEEP;
                dst_TLAST_reg <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TLAST;
                dst_TSTRB_reg <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                sub_reg_668 <= sub_fu_444_p2;
            end if;
        end if;
    end process;
    zext_ln98_reg_696(31 downto 13) <= "0000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state5, grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_done, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_done, icmp_ln98_fu_484_p2, ap_CS_fsm_state3, ap_CS_fsm_state8, ap_CS_fsm_state10, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln98_fu_484_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state10 => 
                if (((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    LineBuffer_1_address0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_address0, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_address0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_1_address0 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_1_address0 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_address0;
        else 
            LineBuffer_1_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    LineBuffer_1_ce0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_ce0, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_ce0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_1_ce0 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_1_ce0 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_ce0;
        else 
            LineBuffer_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_1_ce1_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_1_ce1 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_ce1;
        else 
            LineBuffer_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_1_d0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_d0, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_d0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_1_d0 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_1_d0 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_d0;
        else 
            LineBuffer_1_d0 <= "XXXXXXXX";
        end if; 
    end process;


    LineBuffer_1_we0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_we0, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_we0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_1_we0 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_1_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_1_we0 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_1_we0;
        else 
            LineBuffer_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_address0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_address0, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_address0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_address0 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_address0 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_address0;
        else 
            LineBuffer_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    LineBuffer_ce0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_ce0, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_ce0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_ce0 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_ce0 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_ce0;
        else 
            LineBuffer_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_ce1_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_ce1, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_ce1 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_ce1;
        else 
            LineBuffer_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    LineBuffer_d0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_d0, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_d0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_d0 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_d0 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_d0;
        else 
            LineBuffer_d0 <= "XXXXXXXX";
        end if; 
    end process;


    LineBuffer_we0_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_we0, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_we0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            LineBuffer_we0 <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_LineBuffer_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            LineBuffer_we0 <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_LineBuffer_we0;
        else 
            LineBuffer_we0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_done)
    begin
        if ((grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_done)
    begin
        if ((grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state10, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_10_phi_fu_221_p6_assign_proc : process(mid_reg_709, ap_CS_fsm_state6, WindowBuffer_7_reg_177)
    begin
        if (((mid_reg_709 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_WindowBuffer_10_phi_fu_221_p6 <= ap_const_lv8_0;
        elsif (((not((mid_reg_709 = ap_const_lv2_1)) and not((mid_reg_709 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((mid_reg_709 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            ap_phi_mux_WindowBuffer_10_phi_fu_221_p6 <= WindowBuffer_7_reg_177;
        else 
            ap_phi_mux_WindowBuffer_10_phi_fu_221_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_11_phi_fu_206_p6_assign_proc : process(mid_reg_709, ap_CS_fsm_state6, WindowBuffer_8_reg_164)
    begin
        if ((((mid_reg_709 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((mid_reg_709 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            ap_phi_mux_WindowBuffer_11_phi_fu_206_p6 <= WindowBuffer_8_reg_164;
        elsif ((not((mid_reg_709 = ap_const_lv2_1)) and not((mid_reg_709 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_WindowBuffer_11_phi_fu_206_p6 <= ap_const_lv8_0;
        else 
            ap_phi_mux_WindowBuffer_11_phi_fu_206_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_phi_mux_WindowBuffer_9_phi_fu_236_p6_assign_proc : process(mid_reg_709, ap_CS_fsm_state6, WindowBuffer_6_reg_190)
    begin
        if (((mid_reg_709 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            ap_phi_mux_WindowBuffer_9_phi_fu_236_p6 <= ap_const_lv8_0;
        elsif (((not((mid_reg_709 = ap_const_lv2_1)) and not((mid_reg_709 = ap_const_lv2_0)) and (ap_const_logic_1 = ap_CS_fsm_state6)) or ((mid_reg_709 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            ap_phi_mux_WindowBuffer_9_phi_fu_236_p6 <= WindowBuffer_6_reg_190;
        else 
            ap_phi_mux_WindowBuffer_9_phi_fu_236_p6 <= "XXXXXXXX";
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10, regslice_both_dst_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_dst_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    cmp_i_i80_fu_537_p2 <= "1" when (zext_ln98_reg_696 = rows_read_reg_654) else "0";

    dst_TDATA_int_regslice_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TDATA, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID, ap_CS_fsm_state8, dst_TDATA_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID = ap_const_logic_1))) then 
            dst_TDATA_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TDATA;
        else 
            dst_TDATA_int_regslice <= dst_TDATA_reg;
        end if; 
    end process;


    dst_TKEEP_int_regslice_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TKEEP, ap_CS_fsm_state8, dst_TKEEP_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID = ap_const_logic_1))) then 
            dst_TKEEP_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TKEEP;
        else 
            dst_TKEEP_int_regslice <= dst_TKEEP_reg;
        end if; 
    end process;


    dst_TLAST_int_regslice_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TLAST, ap_CS_fsm_state8, dst_TLAST_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID = ap_const_logic_1))) then 
            dst_TLAST_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TLAST;
        else 
            dst_TLAST_int_regslice <= dst_TLAST_reg;
        end if; 
    end process;


    dst_TSTRB_int_regslice_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TSTRB, ap_CS_fsm_state8, dst_TSTRB_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID = ap_const_logic_1))) then 
            dst_TSTRB_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TSTRB;
        else 
            dst_TSTRB_int_regslice <= dst_TSTRB_reg;
        end if; 
    end process;

    dst_TVALID <= regslice_both_dst_V_data_V_U_vld_out;
    dst_TVALID_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TVALID;
    empty_fu_437_p1 <= rows(31 - 1 downto 0);
    grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_ap_start_reg;
    grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_dst_TREADY <= (dst_TREADY_int_regslice and ap_CS_fsm_state8);
    grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_ap_start_reg;
    icmp_ln150_fu_547_p2 <= "1" when (lb_r_i_1_fu_541_p2 = ap_const_lv2_3) else "0";
    icmp_ln98_fu_484_p2 <= "1" when (signed(zext_ln98_fu_480_p1) > signed(rows_read_reg_654)) else "0";
    lb_r_i_1_fu_541_p2 <= std_logic_vector(unsigned(lb_r_i_fu_90) + unsigned(ap_const_lv2_1));
    lb_r_i_2_fu_553_p3 <= 
        ap_const_lv2_0 when (icmp_ln150_fu_547_p2(0) = '1') else 
        lb_r_i_1_fu_541_p2;
    row_3_fu_561_p2 <= std_logic_vector(unsigned(row_fu_94) + unsigned(ap_const_lv13_1));
    src_TREADY <= regslice_both_src_V_data_V_U_ack_in;

    src_TREADY_int_regslice_assign_proc : process(grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_src_TREADY, grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_src_TREADY, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            src_TREADY_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_118_3_fu_352_src_TREADY;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            src_TREADY_int_regslice <= grp_sobel_Pipeline_VITIS_LOOP_88_1_fu_335_src_TREADY;
        else 
            src_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    sub_fu_444_p2 <= std_logic_vector(unsigned(cols_read_reg_647) + unsigned(ap_const_lv32_FFFFFFFF));
    zext_ln98_fu_480_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(row_fu_94),32));
end behav;
