-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir_top_fir_top_Pipeline_VITIS_LOOP_40_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem_0_WREADY : IN STD_LOGIC;
    m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RVALID : IN STD_LOGIC;
    m_axi_gmem_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_RLAST : IN STD_LOGIC;
    m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_BVALID : IN STD_LOGIC;
    m_axi_gmem_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    sext_ln40 : IN STD_LOGIC_VECTOR (61 downto 0);
    c_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_0_ap_vld : OUT STD_LOGIC;
    c_1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_1_ap_vld : OUT STD_LOGIC;
    c_2 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_2_ap_vld : OUT STD_LOGIC;
    c_3 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_3_ap_vld : OUT STD_LOGIC;
    c_4 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_4_ap_vld : OUT STD_LOGIC;
    c_5 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_5_ap_vld : OUT STD_LOGIC;
    c_6 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_6_ap_vld : OUT STD_LOGIC;
    c_7 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_7_ap_vld : OUT STD_LOGIC;
    c_8 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_8_ap_vld : OUT STD_LOGIC;
    c_9 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_9_ap_vld : OUT STD_LOGIC;
    c_10 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_10_ap_vld : OUT STD_LOGIC;
    c_11 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_11_ap_vld : OUT STD_LOGIC;
    c_12 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_12_ap_vld : OUT STD_LOGIC;
    c_13 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_13_ap_vld : OUT STD_LOGIC;
    c_14 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_14_ap_vld : OUT STD_LOGIC;
    c_15 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_15_ap_vld : OUT STD_LOGIC;
    c_16 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_16_ap_vld : OUT STD_LOGIC;
    c_17 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_17_ap_vld : OUT STD_LOGIC;
    c_18 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_18_ap_vld : OUT STD_LOGIC;
    c_19 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_19_ap_vld : OUT STD_LOGIC;
    c_20 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_20_ap_vld : OUT STD_LOGIC;
    c_21 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_21_ap_vld : OUT STD_LOGIC;
    c_22 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_22_ap_vld : OUT STD_LOGIC;
    c_23 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_23_ap_vld : OUT STD_LOGIC;
    c_24 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_24_ap_vld : OUT STD_LOGIC;
    c_25 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_25_ap_vld : OUT STD_LOGIC;
    c_26 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_26_ap_vld : OUT STD_LOGIC;
    c_27 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_27_ap_vld : OUT STD_LOGIC;
    c_28 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_28_ap_vld : OUT STD_LOGIC;
    c_29 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_29_ap_vld : OUT STD_LOGIC;
    c_30 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_30_ap_vld : OUT STD_LOGIC;
    c_31 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_31_ap_vld : OUT STD_LOGIC;
    c_32 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_32_ap_vld : OUT STD_LOGIC;
    c_33 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_33_ap_vld : OUT STD_LOGIC;
    c_34 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_34_ap_vld : OUT STD_LOGIC;
    c_35 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_35_ap_vld : OUT STD_LOGIC;
    c_36 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_36_ap_vld : OUT STD_LOGIC;
    c_37 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_37_ap_vld : OUT STD_LOGIC;
    c_38 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_38_ap_vld : OUT STD_LOGIC;
    c_39 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_39_ap_vld : OUT STD_LOGIC;
    c_40 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_40_ap_vld : OUT STD_LOGIC;
    c_41 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_41_ap_vld : OUT STD_LOGIC;
    c_42 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_42_ap_vld : OUT STD_LOGIC;
    c_43 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_43_ap_vld : OUT STD_LOGIC;
    c_44 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_44_ap_vld : OUT STD_LOGIC;
    c_45 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_45_ap_vld : OUT STD_LOGIC;
    c_46 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_46_ap_vld : OUT STD_LOGIC;
    c_47 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_47_ap_vld : OUT STD_LOGIC;
    c_48 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_48_ap_vld : OUT STD_LOGIC;
    c_49 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_49_ap_vld : OUT STD_LOGIC;
    c_50 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_50_ap_vld : OUT STD_LOGIC;
    c_51 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_51_ap_vld : OUT STD_LOGIC;
    c_52 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_52_ap_vld : OUT STD_LOGIC;
    c_53 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_53_ap_vld : OUT STD_LOGIC;
    c_54 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_54_ap_vld : OUT STD_LOGIC;
    c_55 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_55_ap_vld : OUT STD_LOGIC;
    c_56 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_56_ap_vld : OUT STD_LOGIC;
    c_57 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_57_ap_vld : OUT STD_LOGIC;
    c_58 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_58_ap_vld : OUT STD_LOGIC;
    c_59 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_59_ap_vld : OUT STD_LOGIC;
    c_60 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_60_ap_vld : OUT STD_LOGIC;
    c_61 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_61_ap_vld : OUT STD_LOGIC;
    c_62 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_62_ap_vld : OUT STD_LOGIC;
    c_63 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_63_ap_vld : OUT STD_LOGIC;
    c_64 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_64_ap_vld : OUT STD_LOGIC;
    c_65 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_65_ap_vld : OUT STD_LOGIC;
    c_66 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_66_ap_vld : OUT STD_LOGIC;
    c_67 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_67_ap_vld : OUT STD_LOGIC;
    c_68 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_68_ap_vld : OUT STD_LOGIC;
    c_69 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_69_ap_vld : OUT STD_LOGIC;
    c_70 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_70_ap_vld : OUT STD_LOGIC;
    c_71 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_71_ap_vld : OUT STD_LOGIC;
    c_72 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_72_ap_vld : OUT STD_LOGIC;
    c_73 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_73_ap_vld : OUT STD_LOGIC;
    c_74 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_74_ap_vld : OUT STD_LOGIC;
    c_75 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_75_ap_vld : OUT STD_LOGIC;
    c_76 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_76_ap_vld : OUT STD_LOGIC;
    c_77 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_77_ap_vld : OUT STD_LOGIC;
    c_78 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_78_ap_vld : OUT STD_LOGIC;
    c_79 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_79_ap_vld : OUT STD_LOGIC;
    c_80 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_80_ap_vld : OUT STD_LOGIC;
    c_81 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_81_ap_vld : OUT STD_LOGIC;
    c_82 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_82_ap_vld : OUT STD_LOGIC;
    c_83 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_83_ap_vld : OUT STD_LOGIC;
    c_84 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_84_ap_vld : OUT STD_LOGIC;
    c_85 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_85_ap_vld : OUT STD_LOGIC;
    c_86 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_86_ap_vld : OUT STD_LOGIC;
    c_87 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_87_ap_vld : OUT STD_LOGIC;
    c_88 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_88_ap_vld : OUT STD_LOGIC;
    c_89 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_89_ap_vld : OUT STD_LOGIC;
    c_90 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_90_ap_vld : OUT STD_LOGIC;
    c_91 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_91_ap_vld : OUT STD_LOGIC;
    c_92 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_92_ap_vld : OUT STD_LOGIC;
    c_93 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_93_ap_vld : OUT STD_LOGIC;
    c_94 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_94_ap_vld : OUT STD_LOGIC;
    c_95 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_95_ap_vld : OUT STD_LOGIC;
    c_96 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_96_ap_vld : OUT STD_LOGIC;
    c_97 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_97_ap_vld : OUT STD_LOGIC;
    c_98 : OUT STD_LOGIC_VECTOR (31 downto 0);
    c_98_ap_vld : OUT STD_LOGIC );
end;


architecture behav of fir_top_fir_top_Pipeline_VITIS_LOOP_40_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv7_3 : STD_LOGIC_VECTOR (6 downto 0) := "0000011";
    constant ap_const_lv7_4 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_const_lv7_5 : STD_LOGIC_VECTOR (6 downto 0) := "0000101";
    constant ap_const_lv7_6 : STD_LOGIC_VECTOR (6 downto 0) := "0000110";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv7_9 : STD_LOGIC_VECTOR (6 downto 0) := "0001001";
    constant ap_const_lv7_A : STD_LOGIC_VECTOR (6 downto 0) := "0001010";
    constant ap_const_lv7_B : STD_LOGIC_VECTOR (6 downto 0) := "0001011";
    constant ap_const_lv7_C : STD_LOGIC_VECTOR (6 downto 0) := "0001100";
    constant ap_const_lv7_D : STD_LOGIC_VECTOR (6 downto 0) := "0001101";
    constant ap_const_lv7_E : STD_LOGIC_VECTOR (6 downto 0) := "0001110";
    constant ap_const_lv7_F : STD_LOGIC_VECTOR (6 downto 0) := "0001111";
    constant ap_const_lv7_10 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_const_lv7_11 : STD_LOGIC_VECTOR (6 downto 0) := "0010001";
    constant ap_const_lv7_12 : STD_LOGIC_VECTOR (6 downto 0) := "0010010";
    constant ap_const_lv7_13 : STD_LOGIC_VECTOR (6 downto 0) := "0010011";
    constant ap_const_lv7_14 : STD_LOGIC_VECTOR (6 downto 0) := "0010100";
    constant ap_const_lv7_15 : STD_LOGIC_VECTOR (6 downto 0) := "0010101";
    constant ap_const_lv7_16 : STD_LOGIC_VECTOR (6 downto 0) := "0010110";
    constant ap_const_lv7_17 : STD_LOGIC_VECTOR (6 downto 0) := "0010111";
    constant ap_const_lv7_18 : STD_LOGIC_VECTOR (6 downto 0) := "0011000";
    constant ap_const_lv7_19 : STD_LOGIC_VECTOR (6 downto 0) := "0011001";
    constant ap_const_lv7_1A : STD_LOGIC_VECTOR (6 downto 0) := "0011010";
    constant ap_const_lv7_1B : STD_LOGIC_VECTOR (6 downto 0) := "0011011";
    constant ap_const_lv7_1C : STD_LOGIC_VECTOR (6 downto 0) := "0011100";
    constant ap_const_lv7_1D : STD_LOGIC_VECTOR (6 downto 0) := "0011101";
    constant ap_const_lv7_1E : STD_LOGIC_VECTOR (6 downto 0) := "0011110";
    constant ap_const_lv7_1F : STD_LOGIC_VECTOR (6 downto 0) := "0011111";
    constant ap_const_lv7_20 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_const_lv7_21 : STD_LOGIC_VECTOR (6 downto 0) := "0100001";
    constant ap_const_lv7_22 : STD_LOGIC_VECTOR (6 downto 0) := "0100010";
    constant ap_const_lv7_23 : STD_LOGIC_VECTOR (6 downto 0) := "0100011";
    constant ap_const_lv7_24 : STD_LOGIC_VECTOR (6 downto 0) := "0100100";
    constant ap_const_lv7_25 : STD_LOGIC_VECTOR (6 downto 0) := "0100101";
    constant ap_const_lv7_26 : STD_LOGIC_VECTOR (6 downto 0) := "0100110";
    constant ap_const_lv7_27 : STD_LOGIC_VECTOR (6 downto 0) := "0100111";
    constant ap_const_lv7_28 : STD_LOGIC_VECTOR (6 downto 0) := "0101000";
    constant ap_const_lv7_29 : STD_LOGIC_VECTOR (6 downto 0) := "0101001";
    constant ap_const_lv7_2A : STD_LOGIC_VECTOR (6 downto 0) := "0101010";
    constant ap_const_lv7_2B : STD_LOGIC_VECTOR (6 downto 0) := "0101011";
    constant ap_const_lv7_2C : STD_LOGIC_VECTOR (6 downto 0) := "0101100";
    constant ap_const_lv7_2D : STD_LOGIC_VECTOR (6 downto 0) := "0101101";
    constant ap_const_lv7_2E : STD_LOGIC_VECTOR (6 downto 0) := "0101110";
    constant ap_const_lv7_2F : STD_LOGIC_VECTOR (6 downto 0) := "0101111";
    constant ap_const_lv7_30 : STD_LOGIC_VECTOR (6 downto 0) := "0110000";
    constant ap_const_lv7_31 : STD_LOGIC_VECTOR (6 downto 0) := "0110001";
    constant ap_const_lv7_32 : STD_LOGIC_VECTOR (6 downto 0) := "0110010";
    constant ap_const_lv7_33 : STD_LOGIC_VECTOR (6 downto 0) := "0110011";
    constant ap_const_lv7_34 : STD_LOGIC_VECTOR (6 downto 0) := "0110100";
    constant ap_const_lv7_35 : STD_LOGIC_VECTOR (6 downto 0) := "0110101";
    constant ap_const_lv7_36 : STD_LOGIC_VECTOR (6 downto 0) := "0110110";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv7_38 : STD_LOGIC_VECTOR (6 downto 0) := "0111000";
    constant ap_const_lv7_39 : STD_LOGIC_VECTOR (6 downto 0) := "0111001";
    constant ap_const_lv7_3A : STD_LOGIC_VECTOR (6 downto 0) := "0111010";
    constant ap_const_lv7_3B : STD_LOGIC_VECTOR (6 downto 0) := "0111011";
    constant ap_const_lv7_3C : STD_LOGIC_VECTOR (6 downto 0) := "0111100";
    constant ap_const_lv7_3D : STD_LOGIC_VECTOR (6 downto 0) := "0111101";
    constant ap_const_lv7_3E : STD_LOGIC_VECTOR (6 downto 0) := "0111110";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv7_41 : STD_LOGIC_VECTOR (6 downto 0) := "1000001";
    constant ap_const_lv7_42 : STD_LOGIC_VECTOR (6 downto 0) := "1000010";
    constant ap_const_lv7_43 : STD_LOGIC_VECTOR (6 downto 0) := "1000011";
    constant ap_const_lv7_44 : STD_LOGIC_VECTOR (6 downto 0) := "1000100";
    constant ap_const_lv7_45 : STD_LOGIC_VECTOR (6 downto 0) := "1000101";
    constant ap_const_lv7_46 : STD_LOGIC_VECTOR (6 downto 0) := "1000110";
    constant ap_const_lv7_47 : STD_LOGIC_VECTOR (6 downto 0) := "1000111";
    constant ap_const_lv7_48 : STD_LOGIC_VECTOR (6 downto 0) := "1001000";
    constant ap_const_lv7_49 : STD_LOGIC_VECTOR (6 downto 0) := "1001001";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv7_4B : STD_LOGIC_VECTOR (6 downto 0) := "1001011";
    constant ap_const_lv7_4C : STD_LOGIC_VECTOR (6 downto 0) := "1001100";
    constant ap_const_lv7_4D : STD_LOGIC_VECTOR (6 downto 0) := "1001101";
    constant ap_const_lv7_4E : STD_LOGIC_VECTOR (6 downto 0) := "1001110";
    constant ap_const_lv7_4F : STD_LOGIC_VECTOR (6 downto 0) := "1001111";
    constant ap_const_lv7_50 : STD_LOGIC_VECTOR (6 downto 0) := "1010000";
    constant ap_const_lv7_51 : STD_LOGIC_VECTOR (6 downto 0) := "1010001";
    constant ap_const_lv7_52 : STD_LOGIC_VECTOR (6 downto 0) := "1010010";
    constant ap_const_lv7_53 : STD_LOGIC_VECTOR (6 downto 0) := "1010011";
    constant ap_const_lv7_54 : STD_LOGIC_VECTOR (6 downto 0) := "1010100";
    constant ap_const_lv7_55 : STD_LOGIC_VECTOR (6 downto 0) := "1010101";
    constant ap_const_lv7_56 : STD_LOGIC_VECTOR (6 downto 0) := "1010110";
    constant ap_const_lv7_57 : STD_LOGIC_VECTOR (6 downto 0) := "1010111";
    constant ap_const_lv7_58 : STD_LOGIC_VECTOR (6 downto 0) := "1011000";
    constant ap_const_lv7_59 : STD_LOGIC_VECTOR (6 downto 0) := "1011001";
    constant ap_const_lv7_5A : STD_LOGIC_VECTOR (6 downto 0) := "1011010";
    constant ap_const_lv7_5B : STD_LOGIC_VECTOR (6 downto 0) := "1011011";
    constant ap_const_lv7_5C : STD_LOGIC_VECTOR (6 downto 0) := "1011100";
    constant ap_const_lv7_5D : STD_LOGIC_VECTOR (6 downto 0) := "1011101";
    constant ap_const_lv7_5E : STD_LOGIC_VECTOR (6 downto 0) := "1011110";
    constant ap_const_lv7_5F : STD_LOGIC_VECTOR (6 downto 0) := "1011111";
    constant ap_const_lv7_60 : STD_LOGIC_VECTOR (6 downto 0) := "1100000";
    constant ap_const_lv7_61 : STD_LOGIC_VECTOR (6 downto 0) := "1100001";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv7_7E : STD_LOGIC_VECTOR (6 downto 0) := "1111110";
    constant ap_const_lv7_7D : STD_LOGIC_VECTOR (6 downto 0) := "1111101";
    constant ap_const_lv7_7C : STD_LOGIC_VECTOR (6 downto 0) := "1111100";
    constant ap_const_lv7_7B : STD_LOGIC_VECTOR (6 downto 0) := "1111011";
    constant ap_const_lv7_7A : STD_LOGIC_VECTOR (6 downto 0) := "1111010";
    constant ap_const_lv7_79 : STD_LOGIC_VECTOR (6 downto 0) := "1111001";
    constant ap_const_lv7_78 : STD_LOGIC_VECTOR (6 downto 0) := "1111000";
    constant ap_const_lv7_77 : STD_LOGIC_VECTOR (6 downto 0) := "1110111";
    constant ap_const_lv7_76 : STD_LOGIC_VECTOR (6 downto 0) := "1110110";
    constant ap_const_lv7_75 : STD_LOGIC_VECTOR (6 downto 0) := "1110101";
    constant ap_const_lv7_74 : STD_LOGIC_VECTOR (6 downto 0) := "1110100";
    constant ap_const_lv7_73 : STD_LOGIC_VECTOR (6 downto 0) := "1110011";
    constant ap_const_lv7_72 : STD_LOGIC_VECTOR (6 downto 0) := "1110010";
    constant ap_const_lv7_71 : STD_LOGIC_VECTOR (6 downto 0) := "1110001";
    constant ap_const_lv7_70 : STD_LOGIC_VECTOR (6 downto 0) := "1110000";
    constant ap_const_lv7_6F : STD_LOGIC_VECTOR (6 downto 0) := "1101111";
    constant ap_const_lv7_6E : STD_LOGIC_VECTOR (6 downto 0) := "1101110";
    constant ap_const_lv7_6D : STD_LOGIC_VECTOR (6 downto 0) := "1101101";
    constant ap_const_lv7_6C : STD_LOGIC_VECTOR (6 downto 0) := "1101100";
    constant ap_const_lv7_6B : STD_LOGIC_VECTOR (6 downto 0) := "1101011";
    constant ap_const_lv7_6A : STD_LOGIC_VECTOR (6 downto 0) := "1101010";
    constant ap_const_lv7_69 : STD_LOGIC_VECTOR (6 downto 0) := "1101001";
    constant ap_const_lv7_68 : STD_LOGIC_VECTOR (6 downto 0) := "1101000";
    constant ap_const_lv7_67 : STD_LOGIC_VECTOR (6 downto 0) := "1100111";
    constant ap_const_lv7_66 : STD_LOGIC_VECTOR (6 downto 0) := "1100110";
    constant ap_const_lv7_65 : STD_LOGIC_VECTOR (6 downto 0) := "1100101";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_63 : STD_LOGIC_VECTOR (6 downto 0) := "1100011";
    constant ap_const_lv7_62 : STD_LOGIC_VECTOR (6 downto 0) := "1100010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln40_fu_463_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_block_pp0_stage0_grp1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_grp1 : BOOLEAN;
    signal i_1_reg_1092 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal i_fu_436 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    signal add_ln40_fu_469_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_i_1 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component fir_top_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component fir_top_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage0)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    i_fu_436_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln40_fu_463_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    i_fu_436 <= add_ln40_fu_469_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    i_fu_436 <= ap_const_lv7_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                i_1_reg_1092 <= ap_sig_allocacmp_i_1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln40_fu_469_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_i_1) + unsigned(ap_const_lv7_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_11001_grp1 <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, m_axi_gmem_0_RVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((m_axi_gmem_0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln40_fu_463_p2)
    begin
        if (((icmp_ln40_fu_463_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_i_1_assign_proc : process(ap_CS_fsm_pp0_stage0, i_fu_436, ap_loop_init, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_i_1 <= ap_const_lv7_0;
        else 
            ap_sig_allocacmp_i_1 <= i_fu_436;
        end if; 
    end process;

    c_0 <= m_axi_gmem_0_RDATA;

    c_0_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_0_ap_vld <= ap_const_logic_1;
        else 
            c_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_1 <= m_axi_gmem_0_RDATA;
    c_10 <= m_axi_gmem_0_RDATA;

    c_10_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_10_ap_vld <= ap_const_logic_1;
        else 
            c_10_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_11 <= m_axi_gmem_0_RDATA;

    c_11_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_11_ap_vld <= ap_const_logic_1;
        else 
            c_11_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_12 <= m_axi_gmem_0_RDATA;

    c_12_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_12_ap_vld <= ap_const_logic_1;
        else 
            c_12_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_13 <= m_axi_gmem_0_RDATA;

    c_13_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_13_ap_vld <= ap_const_logic_1;
        else 
            c_13_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_14 <= m_axi_gmem_0_RDATA;

    c_14_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_14_ap_vld <= ap_const_logic_1;
        else 
            c_14_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_15 <= m_axi_gmem_0_RDATA;

    c_15_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_15_ap_vld <= ap_const_logic_1;
        else 
            c_15_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_16 <= m_axi_gmem_0_RDATA;

    c_16_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_10) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_16_ap_vld <= ap_const_logic_1;
        else 
            c_16_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_17 <= m_axi_gmem_0_RDATA;

    c_17_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_11) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_17_ap_vld <= ap_const_logic_1;
        else 
            c_17_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_18 <= m_axi_gmem_0_RDATA;

    c_18_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_12) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_18_ap_vld <= ap_const_logic_1;
        else 
            c_18_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_19 <= m_axi_gmem_0_RDATA;

    c_19_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_13) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_19_ap_vld <= ap_const_logic_1;
        else 
            c_19_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_1_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_1_ap_vld <= ap_const_logic_1;
        else 
            c_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_2 <= m_axi_gmem_0_RDATA;
    c_20 <= m_axi_gmem_0_RDATA;

    c_20_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_14) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_20_ap_vld <= ap_const_logic_1;
        else 
            c_20_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_21 <= m_axi_gmem_0_RDATA;

    c_21_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_15) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_21_ap_vld <= ap_const_logic_1;
        else 
            c_21_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_22 <= m_axi_gmem_0_RDATA;

    c_22_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_16) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_22_ap_vld <= ap_const_logic_1;
        else 
            c_22_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_23 <= m_axi_gmem_0_RDATA;

    c_23_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_17) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_23_ap_vld <= ap_const_logic_1;
        else 
            c_23_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_24 <= m_axi_gmem_0_RDATA;

    c_24_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_18) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_24_ap_vld <= ap_const_logic_1;
        else 
            c_24_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_25 <= m_axi_gmem_0_RDATA;

    c_25_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_19) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_25_ap_vld <= ap_const_logic_1;
        else 
            c_25_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_26 <= m_axi_gmem_0_RDATA;

    c_26_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_1A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_26_ap_vld <= ap_const_logic_1;
        else 
            c_26_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_27 <= m_axi_gmem_0_RDATA;

    c_27_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_1B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_27_ap_vld <= ap_const_logic_1;
        else 
            c_27_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_28 <= m_axi_gmem_0_RDATA;

    c_28_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_1C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_28_ap_vld <= ap_const_logic_1;
        else 
            c_28_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_29 <= m_axi_gmem_0_RDATA;

    c_29_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_1D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_29_ap_vld <= ap_const_logic_1;
        else 
            c_29_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_2_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_2_ap_vld <= ap_const_logic_1;
        else 
            c_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_3 <= m_axi_gmem_0_RDATA;
    c_30 <= m_axi_gmem_0_RDATA;

    c_30_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_1E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_30_ap_vld <= ap_const_logic_1;
        else 
            c_30_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_31 <= m_axi_gmem_0_RDATA;

    c_31_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_1F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_31_ap_vld <= ap_const_logic_1;
        else 
            c_31_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_32 <= m_axi_gmem_0_RDATA;

    c_32_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_20) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_32_ap_vld <= ap_const_logic_1;
        else 
            c_32_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_33 <= m_axi_gmem_0_RDATA;

    c_33_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_21) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_33_ap_vld <= ap_const_logic_1;
        else 
            c_33_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_34 <= m_axi_gmem_0_RDATA;

    c_34_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_22) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_34_ap_vld <= ap_const_logic_1;
        else 
            c_34_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_35 <= m_axi_gmem_0_RDATA;

    c_35_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_23) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_35_ap_vld <= ap_const_logic_1;
        else 
            c_35_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_36 <= m_axi_gmem_0_RDATA;

    c_36_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_24) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_36_ap_vld <= ap_const_logic_1;
        else 
            c_36_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_37 <= m_axi_gmem_0_RDATA;

    c_37_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_25) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_37_ap_vld <= ap_const_logic_1;
        else 
            c_37_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_38 <= m_axi_gmem_0_RDATA;

    c_38_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_26) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_38_ap_vld <= ap_const_logic_1;
        else 
            c_38_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_39 <= m_axi_gmem_0_RDATA;

    c_39_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_27) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_39_ap_vld <= ap_const_logic_1;
        else 
            c_39_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_3_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_3_ap_vld <= ap_const_logic_1;
        else 
            c_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_4 <= m_axi_gmem_0_RDATA;
    c_40 <= m_axi_gmem_0_RDATA;

    c_40_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_28) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_40_ap_vld <= ap_const_logic_1;
        else 
            c_40_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_41 <= m_axi_gmem_0_RDATA;

    c_41_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_29) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_41_ap_vld <= ap_const_logic_1;
        else 
            c_41_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_42 <= m_axi_gmem_0_RDATA;

    c_42_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_2A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_42_ap_vld <= ap_const_logic_1;
        else 
            c_42_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_43 <= m_axi_gmem_0_RDATA;

    c_43_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_2B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_43_ap_vld <= ap_const_logic_1;
        else 
            c_43_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_44 <= m_axi_gmem_0_RDATA;

    c_44_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_2C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_44_ap_vld <= ap_const_logic_1;
        else 
            c_44_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_45 <= m_axi_gmem_0_RDATA;

    c_45_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_2D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_45_ap_vld <= ap_const_logic_1;
        else 
            c_45_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_46 <= m_axi_gmem_0_RDATA;

    c_46_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_2E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_46_ap_vld <= ap_const_logic_1;
        else 
            c_46_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_47 <= m_axi_gmem_0_RDATA;

    c_47_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_2F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_47_ap_vld <= ap_const_logic_1;
        else 
            c_47_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_48 <= m_axi_gmem_0_RDATA;

    c_48_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_30) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_48_ap_vld <= ap_const_logic_1;
        else 
            c_48_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_49 <= m_axi_gmem_0_RDATA;

    c_49_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_31) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_49_ap_vld <= ap_const_logic_1;
        else 
            c_49_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_4_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_4_ap_vld <= ap_const_logic_1;
        else 
            c_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_5 <= m_axi_gmem_0_RDATA;
    c_50 <= m_axi_gmem_0_RDATA;

    c_50_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_32) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_50_ap_vld <= ap_const_logic_1;
        else 
            c_50_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_51 <= m_axi_gmem_0_RDATA;

    c_51_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_33) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_51_ap_vld <= ap_const_logic_1;
        else 
            c_51_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_52 <= m_axi_gmem_0_RDATA;

    c_52_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_34) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_52_ap_vld <= ap_const_logic_1;
        else 
            c_52_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_53 <= m_axi_gmem_0_RDATA;

    c_53_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_35) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_53_ap_vld <= ap_const_logic_1;
        else 
            c_53_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_54 <= m_axi_gmem_0_RDATA;

    c_54_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_36) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_54_ap_vld <= ap_const_logic_1;
        else 
            c_54_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_55 <= m_axi_gmem_0_RDATA;

    c_55_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_37) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_55_ap_vld <= ap_const_logic_1;
        else 
            c_55_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_56 <= m_axi_gmem_0_RDATA;

    c_56_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_38) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_56_ap_vld <= ap_const_logic_1;
        else 
            c_56_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_57 <= m_axi_gmem_0_RDATA;

    c_57_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_39) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_57_ap_vld <= ap_const_logic_1;
        else 
            c_57_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_58 <= m_axi_gmem_0_RDATA;

    c_58_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_3A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_58_ap_vld <= ap_const_logic_1;
        else 
            c_58_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_59 <= m_axi_gmem_0_RDATA;

    c_59_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_3B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_59_ap_vld <= ap_const_logic_1;
        else 
            c_59_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_5_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_5_ap_vld <= ap_const_logic_1;
        else 
            c_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_6 <= m_axi_gmem_0_RDATA;
    c_60 <= m_axi_gmem_0_RDATA;

    c_60_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_3C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_60_ap_vld <= ap_const_logic_1;
        else 
            c_60_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_61 <= m_axi_gmem_0_RDATA;

    c_61_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_3D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_61_ap_vld <= ap_const_logic_1;
        else 
            c_61_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_62 <= m_axi_gmem_0_RDATA;

    c_62_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_3E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_62_ap_vld <= ap_const_logic_1;
        else 
            c_62_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_63 <= m_axi_gmem_0_RDATA;

    c_63_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_3F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_63_ap_vld <= ap_const_logic_1;
        else 
            c_63_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_64 <= m_axi_gmem_0_RDATA;

    c_64_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_40) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_64_ap_vld <= ap_const_logic_1;
        else 
            c_64_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_65 <= m_axi_gmem_0_RDATA;

    c_65_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_41) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_65_ap_vld <= ap_const_logic_1;
        else 
            c_65_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_66 <= m_axi_gmem_0_RDATA;

    c_66_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_42) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_66_ap_vld <= ap_const_logic_1;
        else 
            c_66_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_67 <= m_axi_gmem_0_RDATA;

    c_67_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_43) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_67_ap_vld <= ap_const_logic_1;
        else 
            c_67_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_68 <= m_axi_gmem_0_RDATA;

    c_68_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_44) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_68_ap_vld <= ap_const_logic_1;
        else 
            c_68_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_69 <= m_axi_gmem_0_RDATA;

    c_69_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_45) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_69_ap_vld <= ap_const_logic_1;
        else 
            c_69_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_6_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_6_ap_vld <= ap_const_logic_1;
        else 
            c_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_7 <= m_axi_gmem_0_RDATA;
    c_70 <= m_axi_gmem_0_RDATA;

    c_70_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_46) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_70_ap_vld <= ap_const_logic_1;
        else 
            c_70_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_71 <= m_axi_gmem_0_RDATA;

    c_71_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_47) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_71_ap_vld <= ap_const_logic_1;
        else 
            c_71_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_72 <= m_axi_gmem_0_RDATA;

    c_72_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_48) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_72_ap_vld <= ap_const_logic_1;
        else 
            c_72_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_73 <= m_axi_gmem_0_RDATA;

    c_73_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_49) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_73_ap_vld <= ap_const_logic_1;
        else 
            c_73_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_74 <= m_axi_gmem_0_RDATA;

    c_74_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_4A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_74_ap_vld <= ap_const_logic_1;
        else 
            c_74_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_75 <= m_axi_gmem_0_RDATA;

    c_75_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_4B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_75_ap_vld <= ap_const_logic_1;
        else 
            c_75_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_76 <= m_axi_gmem_0_RDATA;

    c_76_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_4C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_76_ap_vld <= ap_const_logic_1;
        else 
            c_76_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_77 <= m_axi_gmem_0_RDATA;

    c_77_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_4D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_77_ap_vld <= ap_const_logic_1;
        else 
            c_77_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_78 <= m_axi_gmem_0_RDATA;

    c_78_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_4E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_78_ap_vld <= ap_const_logic_1;
        else 
            c_78_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_79 <= m_axi_gmem_0_RDATA;

    c_79_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_4F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_79_ap_vld <= ap_const_logic_1;
        else 
            c_79_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_7_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_7_ap_vld <= ap_const_logic_1;
        else 
            c_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_8 <= m_axi_gmem_0_RDATA;
    c_80 <= m_axi_gmem_0_RDATA;

    c_80_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_50) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_80_ap_vld <= ap_const_logic_1;
        else 
            c_80_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_81 <= m_axi_gmem_0_RDATA;

    c_81_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_51) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_81_ap_vld <= ap_const_logic_1;
        else 
            c_81_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_82 <= m_axi_gmem_0_RDATA;

    c_82_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_52) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_82_ap_vld <= ap_const_logic_1;
        else 
            c_82_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_83 <= m_axi_gmem_0_RDATA;

    c_83_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_53) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_83_ap_vld <= ap_const_logic_1;
        else 
            c_83_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_84 <= m_axi_gmem_0_RDATA;

    c_84_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_54) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_84_ap_vld <= ap_const_logic_1;
        else 
            c_84_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_85 <= m_axi_gmem_0_RDATA;

    c_85_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_55) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_85_ap_vld <= ap_const_logic_1;
        else 
            c_85_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_86 <= m_axi_gmem_0_RDATA;

    c_86_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_56) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_86_ap_vld <= ap_const_logic_1;
        else 
            c_86_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_87 <= m_axi_gmem_0_RDATA;

    c_87_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_57) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_87_ap_vld <= ap_const_logic_1;
        else 
            c_87_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_88 <= m_axi_gmem_0_RDATA;

    c_88_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_58) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_88_ap_vld <= ap_const_logic_1;
        else 
            c_88_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_89 <= m_axi_gmem_0_RDATA;

    c_89_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_59) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_89_ap_vld <= ap_const_logic_1;
        else 
            c_89_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_8_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_8_ap_vld <= ap_const_logic_1;
        else 
            c_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_9 <= m_axi_gmem_0_RDATA;
    c_90 <= m_axi_gmem_0_RDATA;

    c_90_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_5A) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_90_ap_vld <= ap_const_logic_1;
        else 
            c_90_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_91 <= m_axi_gmem_0_RDATA;

    c_91_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_5B) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_91_ap_vld <= ap_const_logic_1;
        else 
            c_91_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_92 <= m_axi_gmem_0_RDATA;

    c_92_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_5C) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_92_ap_vld <= ap_const_logic_1;
        else 
            c_92_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_93 <= m_axi_gmem_0_RDATA;

    c_93_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_5D) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_93_ap_vld <= ap_const_logic_1;
        else 
            c_93_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_94 <= m_axi_gmem_0_RDATA;

    c_94_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_5E) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_94_ap_vld <= ap_const_logic_1;
        else 
            c_94_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_95 <= m_axi_gmem_0_RDATA;

    c_95_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_5F) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_95_ap_vld <= ap_const_logic_1;
        else 
            c_95_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_96 <= m_axi_gmem_0_RDATA;

    c_96_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_60) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_96_ap_vld <= ap_const_logic_1;
        else 
            c_96_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_97 <= m_axi_gmem_0_RDATA;

    c_97_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_61) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_97_ap_vld <= ap_const_logic_1;
        else 
            c_97_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    c_98 <= m_axi_gmem_0_RDATA;

    c_98_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and ((i_1_reg_1092 = ap_const_lv7_62) or ((i_1_reg_1092 = ap_const_lv7_63) or ((i_1_reg_1092 = ap_const_lv7_64) or ((i_1_reg_1092 = ap_const_lv7_65) or ((i_1_reg_1092 = ap_const_lv7_66) or ((i_1_reg_1092 = ap_const_lv7_67) or ((i_1_reg_1092 = ap_const_lv7_68) or ((i_1_reg_1092 = ap_const_lv7_69) or ((i_1_reg_1092 = ap_const_lv7_6A) or ((i_1_reg_1092 = ap_const_lv7_6B) or ((i_1_reg_1092 = ap_const_lv7_6C) or ((i_1_reg_1092 = ap_const_lv7_6D) or ((i_1_reg_1092 = ap_const_lv7_6E) or ((i_1_reg_1092 = ap_const_lv7_6F) or ((i_1_reg_1092 = ap_const_lv7_70) or ((i_1_reg_1092 = ap_const_lv7_71) or ((i_1_reg_1092 = ap_const_lv7_72) or ((i_1_reg_1092 = ap_const_lv7_73) or ((i_1_reg_1092 = ap_const_lv7_74) or ((i_1_reg_1092 = ap_const_lv7_75) or ((i_1_reg_1092 = ap_const_lv7_76) or ((i_1_reg_1092 = ap_const_lv7_77) or ((i_1_reg_1092 = ap_const_lv7_78) or ((i_1_reg_1092 = ap_const_lv7_79) 
    or ((i_1_reg_1092 = ap_const_lv7_7A) or ((i_1_reg_1092 = ap_const_lv7_7B) or ((i_1_reg_1092 = ap_const_lv7_7C) or ((i_1_reg_1092 = ap_const_lv7_7D) or ((i_1_reg_1092 = ap_const_lv7_7E) or (i_1_reg_1092 = ap_const_lv7_7F)))))))))))))))))))))))))))))))) then 
            c_98_ap_vld <= ap_const_logic_1;
        else 
            c_98_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    c_9_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1, i_1_reg_1092)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (i_1_reg_1092 = ap_const_lv7_9) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            c_9_ap_vld <= ap_const_logic_1;
        else 
            c_9_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, m_axi_gmem_0_RVALID, ap_block_pp0_stage0_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            gmem_blk_n_R <= m_axi_gmem_0_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    icmp_ln40_fu_463_p2 <= "1" when (ap_sig_allocacmp_i_1 = ap_const_lv7_63) else "0";
    m_axi_gmem_0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_0_ARID <= ap_const_lv1_0;
    m_axi_gmem_0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_0_ARVALID <= ap_const_logic_0;
    m_axi_gmem_0_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_0_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_0_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_0_AWID <= ap_const_lv1_0;
    m_axi_gmem_0_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_0_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_0_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_0_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_0_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_0_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_0_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_0_AWVALID <= ap_const_logic_0;
    m_axi_gmem_0_BREADY <= ap_const_logic_0;

    m_axi_gmem_0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001_grp1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            m_axi_gmem_0_RREADY <= ap_const_logic_1;
        else 
            m_axi_gmem_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_0_WDATA <= ap_const_lv32_0;
    m_axi_gmem_0_WID <= ap_const_lv1_0;
    m_axi_gmem_0_WLAST <= ap_const_logic_0;
    m_axi_gmem_0_WSTRB <= ap_const_lv4_0;
    m_axi_gmem_0_WUSER <= ap_const_lv1_0;
    m_axi_gmem_0_WVALID <= ap_const_logic_0;
end behav;
