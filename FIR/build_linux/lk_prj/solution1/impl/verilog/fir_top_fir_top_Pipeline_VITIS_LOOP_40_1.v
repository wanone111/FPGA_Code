// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module fir_top_fir_top_Pipeline_VITIS_LOOP_40_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY,
        m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY,
        m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY,
        m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID,
        m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA,
        m_axi_gmem_0_RLAST,
        m_axi_gmem_0_RID,
        m_axi_gmem_0_RFIFONUM,
        m_axi_gmem_0_RUSER,
        m_axi_gmem_0_RRESP,
        m_axi_gmem_0_BVALID,
        m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP,
        m_axi_gmem_0_BID,
        m_axi_gmem_0_BUSER,
        sext_ln40,
        c_0,
        c_0_ap_vld,
        c_1,
        c_1_ap_vld,
        c_2,
        c_2_ap_vld,
        c_3,
        c_3_ap_vld,
        c_4,
        c_4_ap_vld,
        c_5,
        c_5_ap_vld,
        c_6,
        c_6_ap_vld,
        c_7,
        c_7_ap_vld,
        c_8,
        c_8_ap_vld,
        c_9,
        c_9_ap_vld,
        c_10,
        c_10_ap_vld,
        c_11,
        c_11_ap_vld,
        c_12,
        c_12_ap_vld,
        c_13,
        c_13_ap_vld,
        c_14,
        c_14_ap_vld,
        c_15,
        c_15_ap_vld,
        c_16,
        c_16_ap_vld,
        c_17,
        c_17_ap_vld,
        c_18,
        c_18_ap_vld,
        c_19,
        c_19_ap_vld,
        c_20,
        c_20_ap_vld,
        c_21,
        c_21_ap_vld,
        c_22,
        c_22_ap_vld,
        c_23,
        c_23_ap_vld,
        c_24,
        c_24_ap_vld,
        c_25,
        c_25_ap_vld,
        c_26,
        c_26_ap_vld,
        c_27,
        c_27_ap_vld,
        c_28,
        c_28_ap_vld,
        c_29,
        c_29_ap_vld,
        c_30,
        c_30_ap_vld,
        c_31,
        c_31_ap_vld,
        c_32,
        c_32_ap_vld,
        c_33,
        c_33_ap_vld,
        c_34,
        c_34_ap_vld,
        c_35,
        c_35_ap_vld,
        c_36,
        c_36_ap_vld,
        c_37,
        c_37_ap_vld,
        c_38,
        c_38_ap_vld,
        c_39,
        c_39_ap_vld,
        c_40,
        c_40_ap_vld,
        c_41,
        c_41_ap_vld,
        c_42,
        c_42_ap_vld,
        c_43,
        c_43_ap_vld,
        c_44,
        c_44_ap_vld,
        c_45,
        c_45_ap_vld,
        c_46,
        c_46_ap_vld,
        c_47,
        c_47_ap_vld,
        c_48,
        c_48_ap_vld,
        c_49,
        c_49_ap_vld,
        c_50,
        c_50_ap_vld,
        c_51,
        c_51_ap_vld,
        c_52,
        c_52_ap_vld,
        c_53,
        c_53_ap_vld,
        c_54,
        c_54_ap_vld,
        c_55,
        c_55_ap_vld,
        c_56,
        c_56_ap_vld,
        c_57,
        c_57_ap_vld,
        c_58,
        c_58_ap_vld,
        c_59,
        c_59_ap_vld,
        c_60,
        c_60_ap_vld,
        c_61,
        c_61_ap_vld,
        c_62,
        c_62_ap_vld,
        c_63,
        c_63_ap_vld,
        c_64,
        c_64_ap_vld,
        c_65,
        c_65_ap_vld,
        c_66,
        c_66_ap_vld,
        c_67,
        c_67_ap_vld,
        c_68,
        c_68_ap_vld,
        c_69,
        c_69_ap_vld,
        c_70,
        c_70_ap_vld,
        c_71,
        c_71_ap_vld,
        c_72,
        c_72_ap_vld,
        c_73,
        c_73_ap_vld,
        c_74,
        c_74_ap_vld,
        c_75,
        c_75_ap_vld,
        c_76,
        c_76_ap_vld,
        c_77,
        c_77_ap_vld,
        c_78,
        c_78_ap_vld,
        c_79,
        c_79_ap_vld,
        c_80,
        c_80_ap_vld,
        c_81,
        c_81_ap_vld,
        c_82,
        c_82_ap_vld,
        c_83,
        c_83_ap_vld,
        c_84,
        c_84_ap_vld,
        c_85,
        c_85_ap_vld,
        c_86,
        c_86_ap_vld,
        c_87,
        c_87_ap_vld,
        c_88,
        c_88_ap_vld,
        c_89,
        c_89_ap_vld,
        c_90,
        c_90_ap_vld,
        c_91,
        c_91_ap_vld,
        c_92,
        c_92_ap_vld,
        c_93,
        c_93_ap_vld,
        c_94,
        c_94_ap_vld,
        c_95,
        c_95_ap_vld,
        c_96,
        c_96_ap_vld,
        c_97,
        c_97_ap_vld,
        c_98,
        c_98_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_0_AWVALID;
input   m_axi_gmem_0_AWREADY;
output  [63:0] m_axi_gmem_0_AWADDR;
output  [0:0] m_axi_gmem_0_AWID;
output  [31:0] m_axi_gmem_0_AWLEN;
output  [2:0] m_axi_gmem_0_AWSIZE;
output  [1:0] m_axi_gmem_0_AWBURST;
output  [1:0] m_axi_gmem_0_AWLOCK;
output  [3:0] m_axi_gmem_0_AWCACHE;
output  [2:0] m_axi_gmem_0_AWPROT;
output  [3:0] m_axi_gmem_0_AWQOS;
output  [3:0] m_axi_gmem_0_AWREGION;
output  [0:0] m_axi_gmem_0_AWUSER;
output   m_axi_gmem_0_WVALID;
input   m_axi_gmem_0_WREADY;
output  [31:0] m_axi_gmem_0_WDATA;
output  [3:0] m_axi_gmem_0_WSTRB;
output   m_axi_gmem_0_WLAST;
output  [0:0] m_axi_gmem_0_WID;
output  [0:0] m_axi_gmem_0_WUSER;
output   m_axi_gmem_0_ARVALID;
input   m_axi_gmem_0_ARREADY;
output  [63:0] m_axi_gmem_0_ARADDR;
output  [0:0] m_axi_gmem_0_ARID;
output  [31:0] m_axi_gmem_0_ARLEN;
output  [2:0] m_axi_gmem_0_ARSIZE;
output  [1:0] m_axi_gmem_0_ARBURST;
output  [1:0] m_axi_gmem_0_ARLOCK;
output  [3:0] m_axi_gmem_0_ARCACHE;
output  [2:0] m_axi_gmem_0_ARPROT;
output  [3:0] m_axi_gmem_0_ARQOS;
output  [3:0] m_axi_gmem_0_ARREGION;
output  [0:0] m_axi_gmem_0_ARUSER;
input   m_axi_gmem_0_RVALID;
output   m_axi_gmem_0_RREADY;
input  [31:0] m_axi_gmem_0_RDATA;
input   m_axi_gmem_0_RLAST;
input  [0:0] m_axi_gmem_0_RID;
input  [8:0] m_axi_gmem_0_RFIFONUM;
input  [0:0] m_axi_gmem_0_RUSER;
input  [1:0] m_axi_gmem_0_RRESP;
input   m_axi_gmem_0_BVALID;
output   m_axi_gmem_0_BREADY;
input  [1:0] m_axi_gmem_0_BRESP;
input  [0:0] m_axi_gmem_0_BID;
input  [0:0] m_axi_gmem_0_BUSER;
input  [61:0] sext_ln40;
output  [31:0] c_0;
output   c_0_ap_vld;
output  [31:0] c_1;
output   c_1_ap_vld;
output  [31:0] c_2;
output   c_2_ap_vld;
output  [31:0] c_3;
output   c_3_ap_vld;
output  [31:0] c_4;
output   c_4_ap_vld;
output  [31:0] c_5;
output   c_5_ap_vld;
output  [31:0] c_6;
output   c_6_ap_vld;
output  [31:0] c_7;
output   c_7_ap_vld;
output  [31:0] c_8;
output   c_8_ap_vld;
output  [31:0] c_9;
output   c_9_ap_vld;
output  [31:0] c_10;
output   c_10_ap_vld;
output  [31:0] c_11;
output   c_11_ap_vld;
output  [31:0] c_12;
output   c_12_ap_vld;
output  [31:0] c_13;
output   c_13_ap_vld;
output  [31:0] c_14;
output   c_14_ap_vld;
output  [31:0] c_15;
output   c_15_ap_vld;
output  [31:0] c_16;
output   c_16_ap_vld;
output  [31:0] c_17;
output   c_17_ap_vld;
output  [31:0] c_18;
output   c_18_ap_vld;
output  [31:0] c_19;
output   c_19_ap_vld;
output  [31:0] c_20;
output   c_20_ap_vld;
output  [31:0] c_21;
output   c_21_ap_vld;
output  [31:0] c_22;
output   c_22_ap_vld;
output  [31:0] c_23;
output   c_23_ap_vld;
output  [31:0] c_24;
output   c_24_ap_vld;
output  [31:0] c_25;
output   c_25_ap_vld;
output  [31:0] c_26;
output   c_26_ap_vld;
output  [31:0] c_27;
output   c_27_ap_vld;
output  [31:0] c_28;
output   c_28_ap_vld;
output  [31:0] c_29;
output   c_29_ap_vld;
output  [31:0] c_30;
output   c_30_ap_vld;
output  [31:0] c_31;
output   c_31_ap_vld;
output  [31:0] c_32;
output   c_32_ap_vld;
output  [31:0] c_33;
output   c_33_ap_vld;
output  [31:0] c_34;
output   c_34_ap_vld;
output  [31:0] c_35;
output   c_35_ap_vld;
output  [31:0] c_36;
output   c_36_ap_vld;
output  [31:0] c_37;
output   c_37_ap_vld;
output  [31:0] c_38;
output   c_38_ap_vld;
output  [31:0] c_39;
output   c_39_ap_vld;
output  [31:0] c_40;
output   c_40_ap_vld;
output  [31:0] c_41;
output   c_41_ap_vld;
output  [31:0] c_42;
output   c_42_ap_vld;
output  [31:0] c_43;
output   c_43_ap_vld;
output  [31:0] c_44;
output   c_44_ap_vld;
output  [31:0] c_45;
output   c_45_ap_vld;
output  [31:0] c_46;
output   c_46_ap_vld;
output  [31:0] c_47;
output   c_47_ap_vld;
output  [31:0] c_48;
output   c_48_ap_vld;
output  [31:0] c_49;
output   c_49_ap_vld;
output  [31:0] c_50;
output   c_50_ap_vld;
output  [31:0] c_51;
output   c_51_ap_vld;
output  [31:0] c_52;
output   c_52_ap_vld;
output  [31:0] c_53;
output   c_53_ap_vld;
output  [31:0] c_54;
output   c_54_ap_vld;
output  [31:0] c_55;
output   c_55_ap_vld;
output  [31:0] c_56;
output   c_56_ap_vld;
output  [31:0] c_57;
output   c_57_ap_vld;
output  [31:0] c_58;
output   c_58_ap_vld;
output  [31:0] c_59;
output   c_59_ap_vld;
output  [31:0] c_60;
output   c_60_ap_vld;
output  [31:0] c_61;
output   c_61_ap_vld;
output  [31:0] c_62;
output   c_62_ap_vld;
output  [31:0] c_63;
output   c_63_ap_vld;
output  [31:0] c_64;
output   c_64_ap_vld;
output  [31:0] c_65;
output   c_65_ap_vld;
output  [31:0] c_66;
output   c_66_ap_vld;
output  [31:0] c_67;
output   c_67_ap_vld;
output  [31:0] c_68;
output   c_68_ap_vld;
output  [31:0] c_69;
output   c_69_ap_vld;
output  [31:0] c_70;
output   c_70_ap_vld;
output  [31:0] c_71;
output   c_71_ap_vld;
output  [31:0] c_72;
output   c_72_ap_vld;
output  [31:0] c_73;
output   c_73_ap_vld;
output  [31:0] c_74;
output   c_74_ap_vld;
output  [31:0] c_75;
output   c_75_ap_vld;
output  [31:0] c_76;
output   c_76_ap_vld;
output  [31:0] c_77;
output   c_77_ap_vld;
output  [31:0] c_78;
output   c_78_ap_vld;
output  [31:0] c_79;
output   c_79_ap_vld;
output  [31:0] c_80;
output   c_80_ap_vld;
output  [31:0] c_81;
output   c_81_ap_vld;
output  [31:0] c_82;
output   c_82_ap_vld;
output  [31:0] c_83;
output   c_83_ap_vld;
output  [31:0] c_84;
output   c_84_ap_vld;
output  [31:0] c_85;
output   c_85_ap_vld;
output  [31:0] c_86;
output   c_86_ap_vld;
output  [31:0] c_87;
output   c_87_ap_vld;
output  [31:0] c_88;
output   c_88_ap_vld;
output  [31:0] c_89;
output   c_89_ap_vld;
output  [31:0] c_90;
output   c_90_ap_vld;
output  [31:0] c_91;
output   c_91_ap_vld;
output  [31:0] c_92;
output   c_92_ap_vld;
output  [31:0] c_93;
output   c_93_ap_vld;
output  [31:0] c_94;
output   c_94_ap_vld;
output  [31:0] c_95;
output   c_95_ap_vld;
output  [31:0] c_96;
output   c_96_ap_vld;
output  [31:0] c_97;
output   c_97_ap_vld;
output  [31:0] c_98;
output   c_98_ap_vld;

reg ap_idle;
reg m_axi_gmem_0_RREADY;
reg c_0_ap_vld;
reg c_1_ap_vld;
reg c_2_ap_vld;
reg c_3_ap_vld;
reg c_4_ap_vld;
reg c_5_ap_vld;
reg c_6_ap_vld;
reg c_7_ap_vld;
reg c_8_ap_vld;
reg c_9_ap_vld;
reg c_10_ap_vld;
reg c_11_ap_vld;
reg c_12_ap_vld;
reg c_13_ap_vld;
reg c_14_ap_vld;
reg c_15_ap_vld;
reg c_16_ap_vld;
reg c_17_ap_vld;
reg c_18_ap_vld;
reg c_19_ap_vld;
reg c_20_ap_vld;
reg c_21_ap_vld;
reg c_22_ap_vld;
reg c_23_ap_vld;
reg c_24_ap_vld;
reg c_25_ap_vld;
reg c_26_ap_vld;
reg c_27_ap_vld;
reg c_28_ap_vld;
reg c_29_ap_vld;
reg c_30_ap_vld;
reg c_31_ap_vld;
reg c_32_ap_vld;
reg c_33_ap_vld;
reg c_34_ap_vld;
reg c_35_ap_vld;
reg c_36_ap_vld;
reg c_37_ap_vld;
reg c_38_ap_vld;
reg c_39_ap_vld;
reg c_40_ap_vld;
reg c_41_ap_vld;
reg c_42_ap_vld;
reg c_43_ap_vld;
reg c_44_ap_vld;
reg c_45_ap_vld;
reg c_46_ap_vld;
reg c_47_ap_vld;
reg c_48_ap_vld;
reg c_49_ap_vld;
reg c_50_ap_vld;
reg c_51_ap_vld;
reg c_52_ap_vld;
reg c_53_ap_vld;
reg c_54_ap_vld;
reg c_55_ap_vld;
reg c_56_ap_vld;
reg c_57_ap_vld;
reg c_58_ap_vld;
reg c_59_ap_vld;
reg c_60_ap_vld;
reg c_61_ap_vld;
reg c_62_ap_vld;
reg c_63_ap_vld;
reg c_64_ap_vld;
reg c_65_ap_vld;
reg c_66_ap_vld;
reg c_67_ap_vld;
reg c_68_ap_vld;
reg c_69_ap_vld;
reg c_70_ap_vld;
reg c_71_ap_vld;
reg c_72_ap_vld;
reg c_73_ap_vld;
reg c_74_ap_vld;
reg c_75_ap_vld;
reg c_76_ap_vld;
reg c_77_ap_vld;
reg c_78_ap_vld;
reg c_79_ap_vld;
reg c_80_ap_vld;
reg c_81_ap_vld;
reg c_82_ap_vld;
reg c_83_ap_vld;
reg c_84_ap_vld;
reg c_85_ap_vld;
reg c_86_ap_vld;
reg c_87_ap_vld;
reg c_88_ap_vld;
reg c_89_ap_vld;
reg c_90_ap_vld;
reg c_91_ap_vld;
reg c_92_ap_vld;
reg c_93_ap_vld;
reg c_94_ap_vld;
reg c_95_ap_vld;
reg c_96_ap_vld;
reg c_97_ap_vld;
reg c_98_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln40_fu_463_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    gmem_blk_n_R;
wire    ap_block_pp0_stage0_grp1;
reg    ap_block_pp0_stage0_11001_grp1;
reg   [6:0] i_1_reg_1092;
reg    ap_block_pp0_stage0_11001;
reg   [6:0] i_fu_436;
wire   [6:0] add_ln40_fu_469_p2;
wire    ap_loop_init;
reg   [6:0] ap_sig_allocacmp_i_1;
wire    ap_block_pp0_stage0;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 i_fu_436 = 7'd0;
#0 ap_done_reg = 1'b0;
end

fir_top_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln40_fu_463_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            i_fu_436 <= add_ln40_fu_469_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_436 <= 7'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_1_reg_1092 <= ap_sig_allocacmp_i_1;
    end
end

always @ (*) begin
    if (((icmp_ln40_fu_463_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_1 = 7'd0;
    end else begin
        ap_sig_allocacmp_i_1 = i_fu_436;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_0_ap_vld = 1'b1;
    end else begin
        c_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd10) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_10_ap_vld = 1'b1;
    end else begin
        c_10_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd11) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_11_ap_vld = 1'b1;
    end else begin
        c_11_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd12) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_12_ap_vld = 1'b1;
    end else begin
        c_12_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd13) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_13_ap_vld = 1'b1;
    end else begin
        c_13_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd14) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_14_ap_vld = 1'b1;
    end else begin
        c_14_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd15) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_15_ap_vld = 1'b1;
    end else begin
        c_15_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd16) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_16_ap_vld = 1'b1;
    end else begin
        c_16_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd17) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_17_ap_vld = 1'b1;
    end else begin
        c_17_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd18) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_18_ap_vld = 1'b1;
    end else begin
        c_18_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd19) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_19_ap_vld = 1'b1;
    end else begin
        c_19_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_1_ap_vld = 1'b1;
    end else begin
        c_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd20) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_20_ap_vld = 1'b1;
    end else begin
        c_20_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd21) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_21_ap_vld = 1'b1;
    end else begin
        c_21_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd22) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_22_ap_vld = 1'b1;
    end else begin
        c_22_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd23) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_23_ap_vld = 1'b1;
    end else begin
        c_23_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd24) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_24_ap_vld = 1'b1;
    end else begin
        c_24_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd25) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_25_ap_vld = 1'b1;
    end else begin
        c_25_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd26) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_26_ap_vld = 1'b1;
    end else begin
        c_26_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd27) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_27_ap_vld = 1'b1;
    end else begin
        c_27_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd28) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_28_ap_vld = 1'b1;
    end else begin
        c_28_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd29) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_29_ap_vld = 1'b1;
    end else begin
        c_29_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_2_ap_vld = 1'b1;
    end else begin
        c_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd30) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_30_ap_vld = 1'b1;
    end else begin
        c_30_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd31) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_31_ap_vld = 1'b1;
    end else begin
        c_31_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd32) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_32_ap_vld = 1'b1;
    end else begin
        c_32_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd33) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_33_ap_vld = 1'b1;
    end else begin
        c_33_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd34) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_34_ap_vld = 1'b1;
    end else begin
        c_34_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd35) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_35_ap_vld = 1'b1;
    end else begin
        c_35_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd36) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_36_ap_vld = 1'b1;
    end else begin
        c_36_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd37) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_37_ap_vld = 1'b1;
    end else begin
        c_37_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd38) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_38_ap_vld = 1'b1;
    end else begin
        c_38_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd39) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_39_ap_vld = 1'b1;
    end else begin
        c_39_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_3_ap_vld = 1'b1;
    end else begin
        c_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd40) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_40_ap_vld = 1'b1;
    end else begin
        c_40_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd41) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_41_ap_vld = 1'b1;
    end else begin
        c_41_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd42) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_42_ap_vld = 1'b1;
    end else begin
        c_42_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd43) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_43_ap_vld = 1'b1;
    end else begin
        c_43_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd44) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_44_ap_vld = 1'b1;
    end else begin
        c_44_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd45) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_45_ap_vld = 1'b1;
    end else begin
        c_45_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd46) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_46_ap_vld = 1'b1;
    end else begin
        c_46_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd47) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_47_ap_vld = 1'b1;
    end else begin
        c_47_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd48) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_48_ap_vld = 1'b1;
    end else begin
        c_48_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd49) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_49_ap_vld = 1'b1;
    end else begin
        c_49_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_4_ap_vld = 1'b1;
    end else begin
        c_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd50) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_50_ap_vld = 1'b1;
    end else begin
        c_50_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd51) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_51_ap_vld = 1'b1;
    end else begin
        c_51_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd52) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_52_ap_vld = 1'b1;
    end else begin
        c_52_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd53) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_53_ap_vld = 1'b1;
    end else begin
        c_53_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd54) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_54_ap_vld = 1'b1;
    end else begin
        c_54_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd55) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_55_ap_vld = 1'b1;
    end else begin
        c_55_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd56) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_56_ap_vld = 1'b1;
    end else begin
        c_56_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd57) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_57_ap_vld = 1'b1;
    end else begin
        c_57_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd58) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_58_ap_vld = 1'b1;
    end else begin
        c_58_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd59) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_59_ap_vld = 1'b1;
    end else begin
        c_59_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_5_ap_vld = 1'b1;
    end else begin
        c_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd60) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_60_ap_vld = 1'b1;
    end else begin
        c_60_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd61) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_61_ap_vld = 1'b1;
    end else begin
        c_61_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd62) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_62_ap_vld = 1'b1;
    end else begin
        c_62_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd63) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_63_ap_vld = 1'b1;
    end else begin
        c_63_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd64) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_64_ap_vld = 1'b1;
    end else begin
        c_64_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd65) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_65_ap_vld = 1'b1;
    end else begin
        c_65_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd66) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_66_ap_vld = 1'b1;
    end else begin
        c_66_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd67) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_67_ap_vld = 1'b1;
    end else begin
        c_67_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd68) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_68_ap_vld = 1'b1;
    end else begin
        c_68_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd69) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_69_ap_vld = 1'b1;
    end else begin
        c_69_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_6_ap_vld = 1'b1;
    end else begin
        c_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd70) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_70_ap_vld = 1'b1;
    end else begin
        c_70_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd71) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_71_ap_vld = 1'b1;
    end else begin
        c_71_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd72) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_72_ap_vld = 1'b1;
    end else begin
        c_72_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd73) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_73_ap_vld = 1'b1;
    end else begin
        c_73_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd74) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_74_ap_vld = 1'b1;
    end else begin
        c_74_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd75) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_75_ap_vld = 1'b1;
    end else begin
        c_75_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd76) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_76_ap_vld = 1'b1;
    end else begin
        c_76_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd77) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_77_ap_vld = 1'b1;
    end else begin
        c_77_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd78) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_78_ap_vld = 1'b1;
    end else begin
        c_78_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd79) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_79_ap_vld = 1'b1;
    end else begin
        c_79_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_7_ap_vld = 1'b1;
    end else begin
        c_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd80) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_80_ap_vld = 1'b1;
    end else begin
        c_80_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd81) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_81_ap_vld = 1'b1;
    end else begin
        c_81_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd82) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_82_ap_vld = 1'b1;
    end else begin
        c_82_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd83) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_83_ap_vld = 1'b1;
    end else begin
        c_83_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd84) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_84_ap_vld = 1'b1;
    end else begin
        c_84_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd85) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_85_ap_vld = 1'b1;
    end else begin
        c_85_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd86) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_86_ap_vld = 1'b1;
    end else begin
        c_86_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd87) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_87_ap_vld = 1'b1;
    end else begin
        c_87_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd88) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_88_ap_vld = 1'b1;
    end else begin
        c_88_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd89) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_89_ap_vld = 1'b1;
    end else begin
        c_89_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_8_ap_vld = 1'b1;
    end else begin
        c_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd90) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_90_ap_vld = 1'b1;
    end else begin
        c_90_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd91) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_91_ap_vld = 1'b1;
    end else begin
        c_91_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd92) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_92_ap_vld = 1'b1;
    end else begin
        c_92_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd93) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_93_ap_vld = 1'b1;
    end else begin
        c_93_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd94) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_94_ap_vld = 1'b1;
    end else begin
        c_94_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd95) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_95_ap_vld = 1'b1;
    end else begin
        c_95_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd96) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_96_ap_vld = 1'b1;
    end else begin
        c_96_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd97) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_97_ap_vld = 1'b1;
    end else begin
        c_97_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & ((i_1_reg_1092 == 7'd98) | ((i_1_reg_1092 == 7'd99) | ((i_1_reg_1092 == 7'd100) | ((i_1_reg_1092 == 7'd101) | ((i_1_reg_1092 == 7'd102) | ((i_1_reg_1092 == 7'd103) | ((i_1_reg_1092 == 7'd104) | ((i_1_reg_1092 == 7'd105) | ((i_1_reg_1092 == 7'd106) | ((i_1_reg_1092 == 7'd107) | ((i_1_reg_1092 == 7'd108) | ((i_1_reg_1092 == 7'd109) | ((i_1_reg_1092 == 7'd110) | ((i_1_reg_1092 == 7'd111) | ((i_1_reg_1092 == 7'd112) | ((i_1_reg_1092 == 7'd113) | ((i_1_reg_1092 == 7'd114) | ((i_1_reg_1092 == 7'd115) | ((i_1_reg_1092 == 7'd116) | ((i_1_reg_1092 == 7'd117) | ((i_1_reg_1092 == 7'd118) | ((i_1_reg_1092 == 7'd119) | ((i_1_reg_1092 == 7'd120) | ((i_1_reg_1092 == 7'd121) | ((i_1_reg_1092 == 7'd122) | ((i_1_reg_1092 == 7'd123) | ((i_1_reg_1092 == 7'd124) | ((i_1_reg_1092 == 7'd125) | ((i_1_reg_1092 == 7'd126) | (i_1_reg_1092 == 7'd127)))))))))))))))))))))))))))))))) begin
        c_98_ap_vld = 1'b1;
    end else begin
        c_98_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (i_1_reg_1092 == 7'd9) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        c_9_ap_vld = 1'b1;
    end else begin
        c_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        gmem_blk_n_R = m_axi_gmem_0_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001_grp1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        m_axi_gmem_0_RREADY = 1'b1;
    end else begin
        m_axi_gmem_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln40_fu_469_p2 = (ap_sig_allocacmp_i_1 + 7'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp1 = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage0_grp1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((m_axi_gmem_0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign c_0 = m_axi_gmem_0_RDATA;

assign c_1 = m_axi_gmem_0_RDATA;

assign c_10 = m_axi_gmem_0_RDATA;

assign c_11 = m_axi_gmem_0_RDATA;

assign c_12 = m_axi_gmem_0_RDATA;

assign c_13 = m_axi_gmem_0_RDATA;

assign c_14 = m_axi_gmem_0_RDATA;

assign c_15 = m_axi_gmem_0_RDATA;

assign c_16 = m_axi_gmem_0_RDATA;

assign c_17 = m_axi_gmem_0_RDATA;

assign c_18 = m_axi_gmem_0_RDATA;

assign c_19 = m_axi_gmem_0_RDATA;

assign c_2 = m_axi_gmem_0_RDATA;

assign c_20 = m_axi_gmem_0_RDATA;

assign c_21 = m_axi_gmem_0_RDATA;

assign c_22 = m_axi_gmem_0_RDATA;

assign c_23 = m_axi_gmem_0_RDATA;

assign c_24 = m_axi_gmem_0_RDATA;

assign c_25 = m_axi_gmem_0_RDATA;

assign c_26 = m_axi_gmem_0_RDATA;

assign c_27 = m_axi_gmem_0_RDATA;

assign c_28 = m_axi_gmem_0_RDATA;

assign c_29 = m_axi_gmem_0_RDATA;

assign c_3 = m_axi_gmem_0_RDATA;

assign c_30 = m_axi_gmem_0_RDATA;

assign c_31 = m_axi_gmem_0_RDATA;

assign c_32 = m_axi_gmem_0_RDATA;

assign c_33 = m_axi_gmem_0_RDATA;

assign c_34 = m_axi_gmem_0_RDATA;

assign c_35 = m_axi_gmem_0_RDATA;

assign c_36 = m_axi_gmem_0_RDATA;

assign c_37 = m_axi_gmem_0_RDATA;

assign c_38 = m_axi_gmem_0_RDATA;

assign c_39 = m_axi_gmem_0_RDATA;

assign c_4 = m_axi_gmem_0_RDATA;

assign c_40 = m_axi_gmem_0_RDATA;

assign c_41 = m_axi_gmem_0_RDATA;

assign c_42 = m_axi_gmem_0_RDATA;

assign c_43 = m_axi_gmem_0_RDATA;

assign c_44 = m_axi_gmem_0_RDATA;

assign c_45 = m_axi_gmem_0_RDATA;

assign c_46 = m_axi_gmem_0_RDATA;

assign c_47 = m_axi_gmem_0_RDATA;

assign c_48 = m_axi_gmem_0_RDATA;

assign c_49 = m_axi_gmem_0_RDATA;

assign c_5 = m_axi_gmem_0_RDATA;

assign c_50 = m_axi_gmem_0_RDATA;

assign c_51 = m_axi_gmem_0_RDATA;

assign c_52 = m_axi_gmem_0_RDATA;

assign c_53 = m_axi_gmem_0_RDATA;

assign c_54 = m_axi_gmem_0_RDATA;

assign c_55 = m_axi_gmem_0_RDATA;

assign c_56 = m_axi_gmem_0_RDATA;

assign c_57 = m_axi_gmem_0_RDATA;

assign c_58 = m_axi_gmem_0_RDATA;

assign c_59 = m_axi_gmem_0_RDATA;

assign c_6 = m_axi_gmem_0_RDATA;

assign c_60 = m_axi_gmem_0_RDATA;

assign c_61 = m_axi_gmem_0_RDATA;

assign c_62 = m_axi_gmem_0_RDATA;

assign c_63 = m_axi_gmem_0_RDATA;

assign c_64 = m_axi_gmem_0_RDATA;

assign c_65 = m_axi_gmem_0_RDATA;

assign c_66 = m_axi_gmem_0_RDATA;

assign c_67 = m_axi_gmem_0_RDATA;

assign c_68 = m_axi_gmem_0_RDATA;

assign c_69 = m_axi_gmem_0_RDATA;

assign c_7 = m_axi_gmem_0_RDATA;

assign c_70 = m_axi_gmem_0_RDATA;

assign c_71 = m_axi_gmem_0_RDATA;

assign c_72 = m_axi_gmem_0_RDATA;

assign c_73 = m_axi_gmem_0_RDATA;

assign c_74 = m_axi_gmem_0_RDATA;

assign c_75 = m_axi_gmem_0_RDATA;

assign c_76 = m_axi_gmem_0_RDATA;

assign c_77 = m_axi_gmem_0_RDATA;

assign c_78 = m_axi_gmem_0_RDATA;

assign c_79 = m_axi_gmem_0_RDATA;

assign c_8 = m_axi_gmem_0_RDATA;

assign c_80 = m_axi_gmem_0_RDATA;

assign c_81 = m_axi_gmem_0_RDATA;

assign c_82 = m_axi_gmem_0_RDATA;

assign c_83 = m_axi_gmem_0_RDATA;

assign c_84 = m_axi_gmem_0_RDATA;

assign c_85 = m_axi_gmem_0_RDATA;

assign c_86 = m_axi_gmem_0_RDATA;

assign c_87 = m_axi_gmem_0_RDATA;

assign c_88 = m_axi_gmem_0_RDATA;

assign c_89 = m_axi_gmem_0_RDATA;

assign c_9 = m_axi_gmem_0_RDATA;

assign c_90 = m_axi_gmem_0_RDATA;

assign c_91 = m_axi_gmem_0_RDATA;

assign c_92 = m_axi_gmem_0_RDATA;

assign c_93 = m_axi_gmem_0_RDATA;

assign c_94 = m_axi_gmem_0_RDATA;

assign c_95 = m_axi_gmem_0_RDATA;

assign c_96 = m_axi_gmem_0_RDATA;

assign c_97 = m_axi_gmem_0_RDATA;

assign c_98 = m_axi_gmem_0_RDATA;

assign icmp_ln40_fu_463_p2 = ((ap_sig_allocacmp_i_1 == 7'd99) ? 1'b1 : 1'b0);

assign m_axi_gmem_0_ARADDR = 64'd0;

assign m_axi_gmem_0_ARBURST = 2'd0;

assign m_axi_gmem_0_ARCACHE = 4'd0;

assign m_axi_gmem_0_ARID = 1'd0;

assign m_axi_gmem_0_ARLEN = 32'd0;

assign m_axi_gmem_0_ARLOCK = 2'd0;

assign m_axi_gmem_0_ARPROT = 3'd0;

assign m_axi_gmem_0_ARQOS = 4'd0;

assign m_axi_gmem_0_ARREGION = 4'd0;

assign m_axi_gmem_0_ARSIZE = 3'd0;

assign m_axi_gmem_0_ARUSER = 1'd0;

assign m_axi_gmem_0_ARVALID = 1'b0;

assign m_axi_gmem_0_AWADDR = 64'd0;

assign m_axi_gmem_0_AWBURST = 2'd0;

assign m_axi_gmem_0_AWCACHE = 4'd0;

assign m_axi_gmem_0_AWID = 1'd0;

assign m_axi_gmem_0_AWLEN = 32'd0;

assign m_axi_gmem_0_AWLOCK = 2'd0;

assign m_axi_gmem_0_AWPROT = 3'd0;

assign m_axi_gmem_0_AWQOS = 4'd0;

assign m_axi_gmem_0_AWREGION = 4'd0;

assign m_axi_gmem_0_AWSIZE = 3'd0;

assign m_axi_gmem_0_AWUSER = 1'd0;

assign m_axi_gmem_0_AWVALID = 1'b0;

assign m_axi_gmem_0_BREADY = 1'b0;

assign m_axi_gmem_0_WDATA = 32'd0;

assign m_axi_gmem_0_WID = 1'd0;

assign m_axi_gmem_0_WLAST = 1'b0;

assign m_axi_gmem_0_WSTRB = 4'd0;

assign m_axi_gmem_0_WUSER = 1'd0;

assign m_axi_gmem_0_WVALID = 1'b0;

endmodule //fir_top_fir_top_Pipeline_VITIS_LOOP_40_1
